{"version":3,"sources":["services/TournamentService.js","services/Services.js","components/elements/Modal.js","components/views/TournamentForm/TournamentForm.js","components/views/TournamentCard/TournamentCard.js","components/views/TournamentList/TournamentList.js","components/views/Home/Home.js","components/views/MatchForm/MatchForm.js","components/views/MatchCard/MatchCard.js","components/views/MatchList/MatchList.js","components/views/TeamCard/TeamCard.js","components/views/TeamList/TeamList.js","components/views/AchievementCard/AchievementCard.js","components/views/AchievementList/AchievementList.js","components/views/Results/Results.js","components/views/TeamForm/TeamForm.js","components/views/Tournament/Tournament.js","App.js","reportWebVitals.js","index.js"],"names":["TournamentService","localStorage","getItem","setItem","JSON","stringify","mock","tournament","a","tournaments","parse","push","id","tIndex","this","searchById","tournamentId","team","read","update","teams","teamId","match","matches","list","index","forEach","item","i","getPositionPoint","position","getMatchKills","_","sum","teamScore","map","score","parseInt","kills","dmg","players","playersResultObject","player","damage","points","total","indexOf","playersResult","Object","keys","key","orderBy","sumBy","ReactModal","setAppElement","Modal","props","useState","modalIsOpen","setIsOpen","contentStyles","inset","maxHeight","overflow","width","size","marginLeft","marginTop","padding","backgroundColor","border","borderRadius","boxShadow","useEffect","isOpen","onRequestClose","closeTimeoutMS","style","overlay","content","className","onClick","paddingTop","children","TournamentForm","onSave","name","setName","teamSize","setTeamSize","setPlayers","playersInput","htmlFor","type","value","placeholder","onChange","e","copy","setPlayerName","target","Services","save","uuidv4","TournamentCard","window","location","TournamentList","tournamentCards","Home","setTournaments","loadTournaments","closeModal","then","MatchForm","setMatch","matchCopy","setPlayerKills","setPlayerDamage","setMatchPosition","saveMatch","MatchCard","tournamentService","open","setOpen","playerScore","getMatchPoint","document","querySelector","CSS","escape","scrollHeight","MatchList","matchCards","TeamCard","onSaveMatchCallback","setMatches","onSaveMatch","TeamList","teamCards","AchievementCard","achievement","icon","color","iconColor","attr","description","AchievementList","result","achievements","length","highKill","maxBy","lowKill","minBy","highDamage","minDamage","highMatchPts","lowMatchPts","cards","Results","activePanel","setActivePanel","setResult","resultSlider","getElementById","scrollTo","top","left","scrollWidth","behavior","getResults","console","log","playerScoreTable","teamScoreTable","TeamForm","setTeam","checked","playerCheckboxes","teamCopy","indexToRemove","splice","teamCopySliced","slice","Math","max","select","saveTeam","Tournament","setTournament","loadTournament","params","generateRandomTeams","teamCount","playersShuffled","shuffle","randomTeams","teamPlayers","j","saveTeams","tournamentCopy","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.958f707d.chunk.js","sourcesContent":["import _ from \"lodash\";\r\nimport mock from './mock.json';\r\n\r\nexport default class TournamentService {\r\n\r\n  constructor() {\r\n    if(!localStorage.getItem('tournaments')){\r\n      localStorage.setItem('tournaments', JSON.stringify(mock));\r\n    }\r\n  }\r\n\r\n  async save(tournament) {\r\n    const tournaments = JSON.parse(localStorage.getItem('tournaments'));\r\n    tournaments.push(tournament);\r\n    localStorage.setItem('tournaments', JSON.stringify(tournaments))\r\n  }\r\n\r\n  async update(id, tournament) {\r\n    const tournaments = JSON.parse(localStorage.getItem('tournaments'));\r\n    const tIndex = this.searchById(tournaments, id);\r\n    tournaments[tIndex] = tournament;\r\n    localStorage.setItem('tournaments', JSON.stringify(tournaments));\r\n  }\r\n\r\n  async list() {\r\n    return JSON.parse(localStorage.getItem('tournaments'));\r\n  }\r\n\r\n  async read(id) {\r\n    const tournaments = JSON.parse(localStorage.getItem('tournaments'));\r\n    const tIndex = this.searchById(tournaments, id);\r\n    return tournaments[tIndex];\r\n  }\r\n\r\n  async saveTeam(tournamentId, team) {\r\n    const tournament = await this.read(tournamentId);\r\n    if(!tournament['teams']){\r\n      tournament['teams'] = [];\r\n    }\r\n    tournament['teams'] = [...tournament['teams'], team];\r\n    this.update(tournamentId, tournament);\r\n    return team;\r\n  }\r\n\r\n  async saveTeams(tournamentId, teams) {\r\n    const tournament = await this.read(tournamentId);\r\n    if(!tournament['teams']){\r\n      tournament['teams'] = [];\r\n    }\r\n    tournament['teams'] = [...tournament['teams'], ...teams];\r\n    this.update(tournamentId, tournament);\r\n    return teams;\r\n  }\r\n\r\n  async saveMatch(tournamentId, teamId, match) {\r\n    const tournament = await this.read(tournamentId);\r\n    if(!tournament['teams']){\r\n      tournament['teams'] = [];\r\n    }\r\n    const tIndex = this.searchById(tournament['teams'], teamId);\r\n    tournament['teams'][tIndex].matches.push(match);\r\n    this.update(tournamentId, tournament);\r\n    return match;\r\n  }\r\n\r\n  searchById(list, id) {\r\n    let index = -1;\r\n    list.forEach((item, i) => {\r\n      if(item.id === id){\r\n        index = i;\r\n      }\r\n    })\r\n    return index;\r\n  }\r\n\r\n  getMatchPoint(match) {\r\n    return this.getPositionPoint(match.position) + this.getMatchKills(match);\r\n  }\r\n\r\n  getMatchKills(match) {\r\n    return _.sum(match.teamScore.map((score) => parseInt(score.kills)));\r\n  }\r\n\r\n  getPositionPoint(position) {\r\n    switch(position) {\r\n      case '1': return 20;\r\n      case '2': return 15;\r\n      case '3': return 10;\r\n      case '4': return 5;\r\n      case '5': return 3;\r\n      case '6': return 2;\r\n      default: return 0;\r\n    }\r\n  }\r\n\r\n  getKillPoint(kills) {\r\n    return kills;\r\n  }\r\n\r\n  getDamagePoint(dmg) {\r\n    return 0;\r\n  }\r\n\r\n  getScorePoint(score) {\r\n    return 0;\r\n  }\r\n\r\n  getResults(tournament) {\r\n    const players = [...tournament.players];\r\n    const playersResultObject = {};\r\n    players.forEach((player) => {\r\n      if(!playersResultObject[player]){\r\n        playersResultObject[player] = {\r\n          player: player,\r\n          kills: 0,\r\n          damage: 0,\r\n          points: 0,\r\n          total: 0\r\n        }\r\n      }\r\n      tournament.teams.forEach((team) => {\r\n        team.matches.forEach((match) => {\r\n          if(team.players.indexOf(player) > -1){\r\n            playersResultObject[player]['points'] += this.getPositionPoint(match.position);\r\n            playersResultObject[player]['total'] += this.getPositionPoint(match.position);\r\n          }\r\n          match.teamScore.forEach((score) => {\r\n            if(player === score.player) {\r\n              playersResultObject[player]['kills'] += parseInt(score.kills);\r\n              playersResultObject[player]['damage'] += parseInt(score.damage);\r\n              playersResultObject[player]['total'] += parseInt(score.kills);\r\n            }\r\n          })\r\n        })\r\n      })\r\n    })\r\n\r\n    const playersResult = [];\r\n    Object.keys(playersResultObject).forEach((key) => {\r\n      playersResult.push(playersResultObject[key]);\r\n    })\r\n\r\n    return {\r\n      players: _.orderBy(playersResult, ['total'], ['desc']),\r\n      teams: _.orderBy(tournament.teams.map((team) => {\r\n        const kills = _.sumBy(team.matches, (match) => _.sumBy(match.teamScore, (score) => parseInt(score.kills)));\r\n        const points = _.sumBy(team.matches, (match) => this.getPositionPoint(match.position));\r\n        return {\r\n          players: team.players,\r\n          kills: kills,\r\n          damage: _.sumBy(team.matches, (match) => _.sumBy(match.teamScore, (score) => parseInt(score.damage))),\r\n          points: points,\r\n          total: kills + points\r\n        }\r\n      }), ['total'], ['desc'])\r\n    };\r\n  }\r\n\r\n}","import TournamentService from \"./TournamentService\";\r\n\r\nclass Service {\r\n\r\n  tournaments() {\r\n    return new TournamentService();\r\n  }\r\n\r\n}\r\n\r\nexport default new Service();","import { useEffect, useState } from 'react';\r\nimport { default as ReactModal } from 'react-modal';\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nexport const Modal = (props) => {\r\n\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n  const overlayStyles = {\r\n    backgroundColor: '#000a'\r\n  };\r\n\r\n  const contentStyles = {\r\n    inset: 'auto',\r\n    maxHeight: '80vh',\r\n    overflow: 'auto',\r\n    width: (props.size === 'lg' ? '90%' : props.size === 'md' ? '60%' : 'auto'),\r\n    marginLeft: '50%',\r\n    marginTop: '50vh',\r\n    padding: '0',\r\n    backgroundColor: '#111c',\r\n    border: '1px solid #2f2c',\r\n    borderRadius: '0px',\r\n    boxShadow: '0px 0px 20px rgb(0, 0, 0, .4)',\r\n  };\r\n\r\n  useEffect(() => setIsOpen(props.isOpen[0]), [props]);\r\n\r\n  const closeModal = () => {\r\n    props.isOpen[0] = false;\r\n    setIsOpen(false)\r\n  }\r\n\r\n  return (\r\n    <ReactModal\r\n      isOpen={modalIsOpen}\r\n      onRequestClose={props.onRequestClose}\r\n      closeTimeoutMS={300}\r\n      style={{\r\n        overlay: overlayStyles,\r\n        content: contentStyles\r\n      }}\r\n    >\r\n      <div className='h-layout justify-right'>\r\n        <button className='btn--secondary' onClick={() => closeModal()}>X</button>\r\n      </div>\r\n      <div className=\"container\" style={{paddingTop: '0'}}>\r\n        {props.children}\r\n      </div>\r\n    </ReactModal>\r\n  );\r\n};\r\n","import { useState } from 'react';\nimport Services from '../../../services/Services';\nimport { v4 as uuidv4 } from 'uuid';\nimport './TournamentForm.css';\n\nfunction TournamentForm({onSave}) {\n  const [name, setName] = useState('');\n  const [teamSize, setTeamSize] = useState(1);\n  const [players, setPlayers] = useState(['']);\n \n  const addPlayer = () => {\n    setPlayers([...players, '']);\n  };\n \n  const setPlayerName = (index, name) => {\n    const copy = [...players];\n    copy[index] = name\n    setPlayers(copy);\n  };\n \n  const save = () => {\n    Services.tournaments().save({\n      id: uuidv4(),\n      name: name,\n      teamSize: teamSize,\n      players: players,\n      teams: []\n    });\n\n    onSave();\n  };\n\n  const playersInput = players.map((player, index) => {\n    return (\n      <div key={index} className=\"form-group h-layout\">\n        <label htmlFor={'playerNameInput'+index}>Player name</label>\n        <input className='flex-grow' id={'playerNameInput'+index} type='text' value={player}  placeholder='Player Name' onChange={(e) => setPlayerName(index, e.target.value)}/>\n      </div>\n    )\n  });\n\n  return (\n    <div className='mt'>\n      <div>\n        <div className=\"form-group h-layout\">\n          <label htmlFor='tournamentNameInput'>Tournament name</label>\n          <input className='flex-grow' id='tournamentNameInput' type='text' value={name} onChange={(e) => setName(e.target.value)} placeholder='Tournament Name'/>\n        </div>\n        <div className=\"form-group h-layout\">\n          <label htmlFor='teamSizeInput'>Team size</label>\n          <input className='flex-grow' id='teamSizeInput' type='number' value={teamSize} onChange={(e) => setTeamSize(e.target.value)} placeholder='Team size'/>\n        </div>\n      </div>\n      <div>\n        <div className='h-layout justify-left'>\n          <h3 className='flex-grow'>Players</h3>\n          <button className='btn--secondary' onClick={() => addPlayer()}>+</button>\n        </div>\n        {playersInput}\n      </div>\n      <button onClick={() => save()}>save</button>\n    </div>\n  );\n}\n\nexport default TournamentForm;\n","import './TournamentCard.css';\n\nfunction TournamentCard({ tournament }) {\n\n  const players = tournament.players.map((player, index) => <span className='mr text-sm' key={index}>{player}</span>)\n\n  return (\n    <div className='card tournament-card' onClick={() => window.location = '/tournament/' + tournament.id}>\n      <h3>{tournament.name}</h3>\n      <p>Team size: {tournament.teamSize}</p>\n      <h3>Players</h3>\n      <div className='h-layout justify-left'>{players}</div>\n    </div>\n  );\n}\n\nexport default TournamentCard;\n","import TournamentCard from '../TournamentCard/TournamentCard';\nimport './TournamentList.css';\n\nfunction TournamentList({tournaments}) {\n\n  const tournamentCards = tournaments.map((tournament) => <TournamentCard key={tournament.id} tournament={tournament}/>)\n\n  return (\n    <div className='h-layout tournament-list'>\n      {tournamentCards}\n    </div>\n  );\n}\n\nexport default TournamentList;\n","import { useEffect, useState } from 'react';\nimport Services from '../../../services/Services';\nimport { Modal } from '../../elements/Modal';\nimport TournamentForm from '../TournamentForm/TournamentForm';\nimport TournamentList from '../TournamentList/TournamentList';\nimport './Home.css';\n\nfunction Home() {\n  const [modalIsOpen, setIsOpen] = useState([false]);\n  const [tournaments, setTournaments] = useState([]);\n\n  useEffect(() => {\n    loadTournaments();\n  }, [])\n\n  const closeModal = () => {\n    setIsOpen([false]);\n  };\n\n  const loadTournaments = () => {\n    Services.tournaments().list().then((list) => {\n      setTournaments(list);\n    });\n  }\n\n  const onSaveTournaments = () => {\n    loadTournaments();\n    closeModal();\n  }\n\n  return (\n    <div className='home v-layout'>\n      <button onClick={() => setIsOpen([true])}>Start Tournament</button>\n      <h3>Tournaments</h3>\n      <TournamentList tournaments={tournaments}/>\n      \n      <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          size='sm'\n        >\n        <TournamentForm onSave={() => onSaveTournaments()} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default Home;\n","import { useState } from 'react';\nimport Services from '../../../services/Services';\nimport { v4 as uuidv4 } from 'uuid';\nimport './MatchForm.css';\n\nfunction MatchForm({team, onSave}) {\n  const [match, setMatch] = useState({\n    id: uuidv4(),\n    position: '',\n    teamScore: team.players.map((player) => {\n      return {\n        player: player,\n        kills: '',\n        damage: ''\n      }\n    })\n  })\n\n  const setPlayerKills = (index, value) => {\n    const matchCopy = {...match};\n    matchCopy.teamScore[index].kills = value;\n    setMatch(matchCopy);\n  }\n\n  const setPlayerDamage = (index, value) => {\n    const matchCopy = {...match};\n    matchCopy.teamScore[index].damage = value;\n    setMatch(matchCopy);\n  }\n\n  const setMatchPosition = (value) => {\n    const matchCopy = {...match};\n    matchCopy.position = value;\n    setMatch(matchCopy);\n  }\n\n  const save = () => {\n    Services.tournaments().saveMatch(team.tournamentId, team.id, match).then((match) => {\n      onSave(match);\n    })\n  }\n\n  const teamScore = match.teamScore.map((score, index) => {\n    return (\n      <div key={index} className=\"form-group h-layout\">\n        <label className='flex-grow'>{score.player}</label>\n        <input className='ml mr' id={'playerNameInput'+index} type='number' value={score.kills}  placeholder='Kills' onChange={(e) => setPlayerKills(index, e.target.value)}/>\n        <input id={'playerNameInput'+index} type='number' value={score.damage}  placeholder='Damage' onChange={(e) => setPlayerDamage(index, e.target.value)}/>\n      </div>\n    )\n  });\n\n  return (\n    <div className='v-layout align-stretch'>\n      <div>\n        <div className=\"form-group h-layout\">\n          <label htmlFor='matchPositionInput'>Match Position</label>\n          <input className='flex-grow' id='matchPositionInput' type='number' value={match.position} onChange={(e) => setMatchPosition(e.target.value)} placeholder='Match position'/>\n        </div>\n      </div>\n      <div>\n        <h3 className='flex-grow text-accent'>Players</h3>\n        {teamScore}\n      </div>\n      <button onClick={() => save()}>save</button>\n    </div>\n  );\n}\n\nexport default MatchForm;\n","import { useState } from 'react';\nimport Services from '../../../services/Services';\nimport './MatchCard.css';\n\nfunction MatchCard({match}) {\n  const tournamentService = Services.tournaments();\n  const [open, setOpen] = useState(false);\n\n  const playerScore = match.teamScore.map((score, index) => {\n    return (\n      <tr key={index}>\n        <td>{score.player}</td>\n        <td>{score.kills}</td>\n        <td>{score.damage}</td>\n      </tr>\n    );\n  });\n\n  const getMatchDetailHeight = () => {\n    const matchDetail = document.querySelector(`#${CSS.escape(match.id)} .match-detail`);\n    return matchDetail.scrollHeight + 'px';\n  }\n\n  return (\n    <div id={match.id} className='match card' onClick={() => setOpen(!open)}>\n      <div className='h-layout text-sm'>\n        <div><span className='text-accent text-bold'>Kills: </span>{tournamentService.getMatchKills(match)}</div>\n        <div><span className='text-accent text-bold ml'>Match Pts: </span>{tournamentService.getPositionPoint(match.position)}</div>\n        <div><span className='text-accent text-bold ml'>TOTAL: </span>{tournamentService.getMatchPoint(match)}</div>\n      </div>\n      <div className={(open ? 'match--open' : '') + ' mt match-detail'} style={{maxHeight: open ? getMatchDetailHeight() : 0}}>\n        <span className='text-sm'>Position: {match.position}</span>\n        <table className='mt'>\n          <thead>\n            <tr>\n              <th style={{width: '100%'}}>Player</th>\n              <th>Kills</th>\n              <th>Dmg</th>\n            </tr>\n          </thead>\n          <tbody>\n            {playerScore}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default MatchCard;\n","import MatchCard from '../MatchCard/MatchCard';\nimport './MatchList.css';\n\nfunction MatchList({matches}) {\n\n  const matchCards = matches.map((match, index) => <MatchCard key={index} match={match} />);\n\n  return (\n    <div className='match-list'>\n      {matchCards}\n    </div>\n  );\n}\n\nexport default MatchList;\n","import { useEffect, useState } from 'react';\nimport { Modal } from '../../elements/Modal';\nimport MatchForm from '../MatchForm/MatchForm';\nimport MatchList from '../MatchList/MatchList';\nimport './TeamCard.css';\n\nfunction TeamCard({team, onSaveMatchCallback}) {\n  const [modalIsOpen, setIsOpen] = useState([false]);\n  const [matches, setMatches] = useState([]);\n\n  useEffect(() => {\n    setMatches(team.matches);\n  }, [team]);\n \n  const closeModal = () => {\n    setIsOpen([false]);\n  };\n\n  const onSaveMatch = (match) => {\n    setMatches([...matches, match]);\n    closeModal();\n    onSaveMatchCallback(match);\n  };\n\n  const players = team.players.map((player, index) => <span className='mr text-sm' key={index}>{player}</span>)\n\n  return (\n    <div className='card v-layout align-stretch'>\n      <button  className='btn--tertiary' onClick={() => setIsOpen([true])}>Add Match</button>\n      <h4 className='text-accent'>Players</h4>\n      <div className='h-layout justify-stretch'>{players}</div>\n\n      <h4 className='text-accent'>Matches</h4>\n      <MatchList matches={matches} />\n      \n      <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          size='sm'\n        >\n        <MatchForm team={team} onSave={(match) => onSaveMatch(match)} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default TeamCard;\n","import TeamCard from '../TeamCard/TeamCard';\nimport './TeamList.css';\n\nfunction TeamList({teams, onSaveMatchCallback}) {\n\n  const teamCards = teams.map((team, index) => <TeamCard key={index} team={team} onSaveMatchCallback={onSaveMatchCallback}/>);\n\n  return (\n    <div className='team-list h-layout align-left'>\n      {teamCards}\n    </div>\n  );\n}\n\nexport default TeamList;\n","import './AchievementCard.css';\n\nfunction AchievementCard({achievement}) {\n  \n  return (\n    <div className='card v-layout'>\n      <div><i className={'fa-2x fas fa-'+achievement.icon} style={{color: achievement.iconColor}}></i></div>\n      <div className='text-accent mt'>{achievement.name}</div>\n      <div className='text-xl mt mb'>{achievement.player}</div>\n      <div><span className='text-accent'>{achievement.attr}: </span>{achievement.value}</div>\n      <div className='mt text-sm text-hint'>({achievement.description})</div>\n    </div>\n  );\n}\n\nexport default AchievementCard;\n","import _ from 'lodash';\nimport AchievementCard from '../AchievementCard/AchievementCard';\nimport './AchievementList.css';\n\nfunction AchievementList({result}) {\n  const achievements = [];\n  if(result.players.length > 0) {\n    const highKill = _.maxBy(result.players, (player) => player.kills);\n    const lowKill = _.minBy(result.players, (player) => player.kills);\n    const highDamage = _.maxBy(result.players, (player) => player.damage);\n    const minDamage = _.minBy(result.players, (player) => player.damage);\n    const highMatchPts = _.maxBy(result.players, (player) => player.points);\n    const lowMatchPts = _.minBy(result.players, (player) => player.points);\n  \n    achievements.push({\n      name: 'Assassin',\n      player: highKill.player,\n      attr: 'Kills',\n      value: highKill.kills,\n      description: 'Highest Kills',\n      icon: 'crosshairs',\n      iconColor: 'yellow'\n    });\n    achievements.push({\n      name: 'Butcher',\n      player: highDamage.player,\n      attr: 'Damage',\n      value: highDamage.kills,\n      description: 'Highest Damage',\n      icon: 'tint',\n      iconColor: 'red'\n    });\n    achievements.push({\n      name: 'Support',\n      player: highMatchPts.player,\n      attr: 'Match Pts',\n      value: highMatchPts.kills,\n      description: 'Highest Points',\n      icon: 'toolbox',\n      iconColor: 'aqua'\n    });\n    achievements.push({\n      name: 'Bird Hunter',\n      player: lowKill.player,\n      attr: 'Kills',\n      value: lowKill.kills,\n      description: 'Lowest Kills',\n      icon: 'dove',\n      iconColor: 'aliceblue'\n    });\n    achievements.push({\n      name: 'Sleeping',\n      player: minDamage.player,\n      attr: 'Damage',\n      value: minDamage.kills,\n      description: 'Lowest Damage',\n      icon: 'bed',\n      iconColor: 'gray'\n    });\n    achievements.push({\n      name: 'Distracted',\n      player: lowMatchPts.player,\n      attr: 'Match Pts',\n      value: lowMatchPts.kills,\n      description: 'Lowest Points',\n      icon: 'music',\n      iconColor: 'purple'\n    });\n  }\n\n  const cards = achievements.map((achievement, index) => <AchievementCard key={index} achievement={achievement} />);\n\n  return (\n    <div className='achievement-list h-layout align-stretch'>\n      {cards}\n    </div>\n  );\n}\n\nexport default AchievementList;\n","import { useEffect, useState } from 'react';\nimport Services from '../../../services/Services';\nimport AchievementList from '../AchievementList/AchievementList';\nimport './Results.css';\n\nfunction Results({tournament}) {\n  const [activePanel, setActivePanel] = useState(0);\n  const [result, setResult] = useState({\n    players: [],\n    teams: []\n  })\n\n  useEffect(() => {\n    const resultSlider = document.getElementById('result-slider');\n    resultSlider.scrollTo({\n      top: 0,\n      left: (resultSlider.scrollWidth/4) * activePanel, \n      behavior: 'smooth'\n    })\n  }, [activePanel]);\n\n  useEffect(() => {\n    setResult(Services.tournaments().getResults(tournament));\n  }, [tournament]);\n\n  console.log(result)\n  const playerScoreTable = result.players.map((player, index) => {\n    return (\n      <tr key={'playerScore-'+index}>\n        <td>{index+1}</td>\n        <td>{player.player}</td>\n        <td>{player.kills}</td>\n        <td>{player.points}</td>\n        <td>{parseInt(player.kills) + parseInt(player.points)}</td>\n      </tr>\n    )\n  });\n\n  const teamScoreTable = result.teams.map((team, index) => {\n    return (\n      <tr key={'teamScore-'+index}>\n        <td>{index+1}</td>\n        <td>{team.players.map((player, index) => <span key={index} className='mr'>{player}</span>)}</td>\n        <td>{team.kills}</td>\n        <td>{team.points}</td>\n        <td>{parseInt(team.kills) + parseInt(team.points)}</td>\n      </tr>\n    )\n  });\n\n  return (\n    <div className='v-layout result mt-3'>\n      <h3>Results</h3>\n      <div id='result-slider' className='result-slider'>\n        <div className='result-slide v-layout'>\n          {result.players.length > 0 && <div className='h-layout align-right'>\n            <div className='place second-place'>\n              <div className='text-xl'>{result.players[1].player}</div>\n              <div className='box v-layout'>\n                <span className='text-lg'>2nd</span>\n                <span className='text-sm mt'>{parseInt(result.players[1].kills) + parseInt(result.players[1].points)} Pts</span>\n              </div>\n              <div className='v-layout text-sm mt'>\n                <span>Kills: {result.players[1].kills}</span>\n                <span>Match Pts: {result.players[1].points}</span>\n              </div>\n            </div>\n            <div className='place first-place ml mr'>\n              <div className='text-xl'>{result.players[0].player}</div>\n              <div className='box v-layout'>\n                <span className='text-lg'>1st</span>\n                <span className='text-sm mt'>{parseInt(result.players[0].kills) + parseInt(result.players[0].points)} Pts</span>\n              </div>\n              <div className='v-layout text-sm mt'>\n                <span>Kills: {result.players[0].kills}</span>\n                <span>Match Pts: {result.players[0].points}</span>\n              </div>\n            </div>\n            <div className='place third-place'>\n              <div className='text-xl'>{result.players[2].player}</div>\n              <div className='box v-layout'>\n                <span className='text-lg'>3rd</span>\n                <span className='text-sm mt'>{parseInt(result.players[2].kills) + parseInt(result.players[2].points)} Pts</span>\n              </div>\n              <div className='v-layout text-sm mt'>\n                <span>Kills: {result.players[2].kills}</span>\n                <span>Match Pts: {result.players[2].points}</span>\n              </div>\n            </div>\n          </div> }\n        </div>\n        <div className='result-slide v-layout'>\n          <h3 className='mt-3'>Player Score Table</h3>\n          <table>\n            <thead>\n              <tr>\n                <th>Position</th>\n                <th>Player</th>\n                <th>Kills</th>\n                <th>Match Pts</th>\n                <th>Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              {playerScoreTable}\n            </tbody>\n          </table>\n        </div>\n        <div className='result-slide v-layout'>\n          <h3 className='mt-3'>Team Score Table</h3>\n          <table>\n            <thead>\n              <tr>\n                <th>Position</th>\n                <th>Players</th>\n                <th>Kills</th>\n                <th>Match Pts</th>\n                <th>Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              {teamScoreTable}\n            </tbody>\n          </table>\n        </div>\n        <div className='result-slide v-layout'>\n          <h3 className='mt-3'>Achievements</h3>\n          <AchievementList result={result}/>\n        </div>\n      </div>\n      <div className='dots'>\n        <div className={activePanel === 0 ? 'active' : ''} onClick={() => setActivePanel(0)}></div>\n        <div className={activePanel === 1 ? 'active' : ''} onClick={() => setActivePanel(1)}></div>\n        <div className={activePanel === 2 ? 'active' : ''} onClick={() => setActivePanel(2)}></div>\n        <div className={activePanel === 3 ? 'active' : ''} onClick={() => setActivePanel(3)}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Results;\n","import { useEffect, useState } from 'react';\nimport Services from '../../../services/Services';\nimport { v4 as uuidv4 } from 'uuid';\nimport './TeamForm.css';\nimport { indexOf } from 'lodash';\n\nfunction TeamForm({tournamentId, players, teamSize, onSave}) {\n  const [team, setTeam] = useState([])\n\n  const select = (index, value) => {\n    const teamCopy = [...team];\n    if(value){\n      teamCopy.push(index);\n    } else {\n      const indexToRemove = team.indexOf(index);\n      if (indexToRemove > -1) {\n        teamCopy.splice(indexToRemove, 1);\n      }\n    }\n    const teamCopySliced = teamCopy.slice(Math.max(0, teamCopy.length-teamSize), teamCopy.length);\n    setTeam(teamCopySliced);\n  }\n\n  useEffect(() => {\n    players.forEach((player, index) => {\n      if(team.indexOf(index) === -1){\n        document.getElementById(player+'_checkbox').checked = false\n      }\n    });\n  }, [team]);\n\n  const save = () => {\n    Services.tournaments().saveTeam(tournamentId, {\n      id: uuidv4(),\n      tournamentId: tournamentId,\n      players: team.map((index) => players[index]),\n      matches: []\n    }).then((team) => {\n      onSave(team);\n    });\n  }\n\n  const playerCheckboxes = players.map((player, index) => {\n    return (\n      <div key={index} className=\"form-group h-layout\">\n        <label htmlFor={player+'_checkbox'} className='flex-grow'>{player}</label>\n        <input type='checkbox' id={player+'_checkbox'} checked={team.indexOf(index) > -1} onChange={(e) => select(index, e.target.checked)}/>\n      </div>\n    )\n  });\n\n  return (\n    <div className='v-layout align-stretch'>\n      <div>\n        <h3 className='text-accent'>Players</h3>\n        {playerCheckboxes}\n      </div>\n      <button className='mt' onClick={() => save()}>save</button>\n    </div>\n  );\n}\n\nexport default TeamForm;\n","import { useEffect, useState } from 'react';\nimport Services from '../../../services/Services';\nimport { v4 as uuidv4 } from 'uuid';\nimport _, { set } from 'lodash';\nimport './Tournament.css';\nimport TeamList from '../TeamList/TeamList';\nimport Results from '../Results/Results';\nimport { Modal } from '../../elements/Modal';\nimport TeamForm from '../TeamForm/TeamForm';\n\nfunction Tournament(props) {\n  const [modalIsOpen, setIsOpen] = useState([false]);\n  const [tournament, setTournament] = useState({\n    name: '',\n    teamSize: 0,\n    players: [],\n    teams: []\n  });\n\n  useEffect(() => {\n    loadTournament();\n  }, []);\n\n  const closeModal = () => {\n    setIsOpen([false]);\n  };\n\n  const loadTournament = () => {\n    Services.tournaments().read(props.match.params.id).then((tournament) => {\n      setTournament(tournament);\n    });\n  }\n\n  const saveTeams = (teams) => {\n    Services.tournaments().saveTeams(tournament.id, teams).then((teams) => {\n      const tournamentCopy = {...tournament};\n      tournamentCopy.teams = [...tournamentCopy.teams, ...teams];\n      setTournament(tournamentCopy);\n    });\n  }\n\n  const generateRandomTeams = () => {\n    const teamCount = tournament.players.length / tournament.teamSize;\n\n    const playersShuffled =  _.shuffle(tournament.players);\n    const randomTeams = []\n    for(let i = 0; i < teamCount; i++) {\n      const teamPlayers = [];\n      for(let j = 0; j < tournament.teamSize; j++) {\n        teamPlayers.push(playersShuffled[i*tournament.teamSize + j])\n      }\n      randomTeams.push({\n        id: uuidv4(),\n        tournamentId: tournament.id,\n        players: teamPlayers,\n        matches: []\n      })\n    }\n    saveTeams(randomTeams);\n  }\n\n  const onSaveTeam = (team) => {\n    loadTournament();\n  }\n\n  const onSaveMatchCallback = (match) => {\n    loadTournament();\n  }\n\n  const players = tournament.players.map((player, index) => {\n    return (\n      <span className='mr' key={index}>{player}</span>\n    )\n  })\n\n  return (\n    <div className='v-layout'>\n      <h2>{tournament.name}</h2>\n      <p>Team size: {tournament.teamSize}</p>\n      <div className='h-layout'>{players}</div>\n      <Results tournament={tournament} />\n      <h3 className='mt-3'>Teams</h3>\n      <div className='h-layout'>\n        <button className='mr' onClick={() => generateRandomTeams()}>Generate Teams</button>\n        <button onClick={() => setIsOpen([true])}>Add Team</button>\n      </div>\n      <TeamList teams={tournament.teams} onSaveMatchCallback={() => onSaveMatchCallback()}/>\n      \n      <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          size='sm'\n        >\n        <TeamForm tournamentId={tournament.id} players={tournament.players} teamSize={tournament.teamSize} onSave={(team) => onSaveTeam(team)} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default Tournament;\n","import './App.css';\n\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './components/views/Home/Home';\nimport Tournament from './components/views/Tournament/Tournament';\n\nfunction App() {\n  return (\n    <div className='app mt-3 mb-3'>\n      <div className='app-bg'></div>\n      <div className='app-content'>\n        <Router>\n          <Switch>\n            <Route path=\"/tournament/:id\" component={Tournament} />\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}