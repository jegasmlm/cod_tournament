{"version":3,"sources":["services/TournamentService.js","services/Services.js","components/elements/Modal.js","components/views/TournamentForm/TournamentForm.js","components/views/TournamentCard/TournamentCard.js","components/views/TournamentList/TournamentList.js","components/views/Home/Home.js","components/views/MatchForm/MatchForm.js","components/views/MatchCard/MatchCard.js","components/views/MatchList/MatchList.js","components/views/TeamCard/TeamCard.js","components/views/TeamList/TeamList.js","components/views/AchievementCard/AchievementCard.js","components/views/AchievementList/AchievementList.js","components/views/Results/Results.js","components/views/TeamForm/TeamForm.js","components/views/Tournament/Tournament.js","App.js","reportWebVitals.js","index.js"],"names":["TournamentService","localStorage","getItem","setItem","JSON","stringify","mock","tournament","a","tournaments","parse","push","id","tIndex","this","searchById","tournamentId","team","read","update","teams","teamId","match","matches","list","index","forEach","item","i","getPositionPoint","position","getMatchKills","_","sum","teamScore","map","score","parseInt","kills","dmg","players","playersResultObject","player","damage","points","total","indexOf","playersResult","Object","keys","key","orderBy","sumBy","ReactModal","setAppElement","Modal","props","useState","modalIsOpen","setIsOpen","contentStyles","inset","minWith","maxHeight","overflow","width","size","padding","backgroundColor","border","borderRadius","boxShadow","useEffect","isOpen","onRequestClose","closeTimeoutMS","style","overlay","content","className","onClick","paddingTop","children","TournamentForm","onSave","validForm","setValidForm","name","setName","teamSize","setTeamSize","setPlayers","validate","validPlayers","validatedPlayers","playersInput","htmlFor","type","value","placeholder","onChange","e","copy","setPlayerName","target","Services","save","uuidv4","created","Date","then","disabled","TournamentCard","window","location","moment","format","TournamentList","tournamentCards","Home","setTournaments","loadTournaments","closeModal","MatchForm","setMatch","validTeamScore","matchCopy","setPlayerKills","setPlayerDamage","setMatchPosition","saveMatch","MatchCard","tournamentService","open","setOpen","playerScore","getMatchPoint","document","querySelector","CSS","escape","scrollHeight","MatchList","matchCards","TeamCard","onSaveMatchCallback","setMatches","onSaveMatch","TeamList","teamCards","AchievementCard","achievement","icon","color","iconColor","attr","description","AchievementList","result","achievements","length","highKill","maxBy","lowKill","minBy","highDamage","minDamage","highMatchPts","lowMatchPts","cards","Results","activePanel","setActivePanel","setResult","resultSlider","getElementById","scrollTo","top","left","scrollWidth","behavior","getResults","console","log","playerScoreTable","teamScoreTable","TeamForm","setTeam","checked","playerCheckboxes","teamCopy","indexToRemove","splice","teamCopySliced","slice","Math","max","select","saveTeam","Tournament","setTournament","loadTournament","params","generateRandomTeams","teamCount","playersShuffled","shuffle","randomTeams","teamPlayers","j","saveTeams","tournamentCopy","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wkHAGqBA,E,WAEnB,aAAe,oBACTC,aAAaC,QAAQ,gBACvBD,aAAaE,QAAQ,cAAeC,KAAKC,UAAUC,I,+EAIvD,WAAWC,GAAX,eAAAC,EAAA,uDACQC,EAAcL,KAAKM,MAAMT,aAAaC,QAAQ,iBACxCS,KAAKJ,GACjBN,aAAaE,QAAQ,cAAeC,KAAKC,UAAUI,IAHrD,2C,kHAMA,WAAaG,EAAIL,GAAjB,iBAAAC,EAAA,sDACQC,EAAcL,KAAKM,MAAMT,aAAaC,QAAQ,gBAC9CW,EAASC,KAAKC,WAAWN,EAAaG,GAC5CH,EAAYI,GAAUN,EACtBN,aAAaE,QAAQ,cAAeC,KAAKC,UAAUI,IAJrD,gD,kHAOA,sBAAAD,EAAA,+EACSJ,KAAKM,MAAMT,aAAaC,QAAQ,iBADzC,2C,+GAIA,WAAWU,GAAX,iBAAAJ,EAAA,6DACQC,EAAcL,KAAKM,MAAMT,aAAaC,QAAQ,gBAC9CW,EAASC,KAAKC,WAAWN,EAAaG,GAF9C,kBAGSH,EAAYI,IAHrB,gD,oHAMA,WAAeG,EAAcC,GAA7B,eAAAT,EAAA,sEAC2BM,KAAKI,KAAKF,GADrC,cACQT,EADR,QAEgB,QACZA,EAAU,MAAY,IAExBA,EAAU,MAAV,CAAuBU,GAAvB,mBAAgCV,EAAU,QAC1CO,KAAKK,OAAOH,EAAcT,GAN5B,kBAOSU,GAPT,gD,uHAUA,WAAgBD,EAAcI,GAA9B,eAAAZ,EAAA,sEAC2BM,KAAKI,KAAKF,GADrC,cACQT,EADR,QAEgB,QACZA,EAAU,MAAY,IAExBA,EAAU,MAAV,sBAA0Ba,GAA1B,YAAoCb,EAAU,QAC9CO,KAAKK,OAAOH,EAAcT,GAN5B,kBAOSa,GAPT,gD,uHAUA,WAAgBJ,EAAcK,EAAQC,GAAtC,iBAAAd,EAAA,sEAC2BM,KAAKI,KAAKF,GADrC,cACQT,EADR,QAEgB,QACZA,EAAU,MAAY,IAElBM,EAASC,KAAKC,WAAWR,EAAU,MAAWc,GACpDd,EAAU,MAAUM,GAAQU,QAAQZ,KAAKW,GACzCR,KAAKK,OAAOH,EAAcT,GAP5B,kBAQSe,GART,gD,mFAWA,SAAWE,EAAMZ,GACf,IAAIa,GAAS,EAMb,OALAD,EAAKE,SAAQ,SAACC,EAAMC,GACfD,EAAKf,KAAOA,IACba,EAAQG,MAGLH,I,2BAGT,SAAcH,GACZ,OAAOR,KAAKe,iBAAiBP,EAAMQ,UAAYhB,KAAKiB,cAAcT,K,2BAGpE,SAAcA,GACZ,OAAOU,IAAEC,IAAIX,EAAMY,UAAUC,KAAI,SAACC,GAAD,OAAWC,SAASD,EAAME,a,8BAG7D,SAAiBR,GACf,OAAOA,GACL,IAAK,IAAK,OAAO,GACjB,IAAK,IAAK,OAAO,GACjB,IAAK,IAAK,OAAO,GACjB,IAAK,IAAK,OAAO,EACjB,IAAK,IAAK,OAAO,EACjB,IAAK,IAAK,OAAO,EACjB,QAAS,OAAO,K,0BAIpB,SAAaQ,GACX,OAAOA,I,4BAGT,SAAeC,GACb,OAAO,I,2BAGT,SAAcH,GACZ,OAAO,I,wBAGT,SAAW7B,GAAa,IAAD,OACfiC,EAAO,YAAOjC,EAAWiC,SACzBC,EAAsB,GAC5BD,EAAQd,SAAQ,SAACgB,GACXD,EAAoBC,KACtBD,EAAoBC,GAAU,CAC5BA,OAAQA,EACRJ,MAAO,EACPK,OAAQ,EACRC,OAAQ,EACRC,MAAO,IAGXtC,EAAWa,MAAMM,SAAQ,SAACT,GACxBA,EAAKM,QAAQG,SAAQ,SAACJ,GACjBL,EAAKuB,QAAQM,QAAQJ,IAAW,IACjCD,EAAoBC,GAApB,QAAyC,EAAKb,iBAAiBP,EAAMQ,UACrEW,EAAoBC,GAApB,OAAwC,EAAKb,iBAAiBP,EAAMQ,WAEtER,EAAMY,UAAUR,SAAQ,SAACU,GACpBM,IAAWN,EAAMM,SAClBD,EAAoBC,GAApB,OAAwCL,SAASD,EAAME,OACvDG,EAAoBC,GAApB,QAAyCL,SAASD,EAAMO,QACxDF,EAAoBC,GAApB,OAAwCL,SAASD,EAAME,oBAOjE,IAAMS,EAAgB,GAKtB,OAJAC,OAAOC,KAAKR,GAAqBf,SAAQ,SAACwB,GACxCH,EAAcpC,KAAK8B,EAAoBS,OAGlC,CACLV,QAASR,IAAEmB,QAAQJ,EAAe,CAAC,SAAU,CAAC,SAC9C3B,MAAOY,IAAEmB,QAAQ5C,EAAWa,MAAMe,KAAI,SAAClB,GACrC,IAAMqB,EAAQN,IAAEoB,MAAMnC,EAAKM,SAAS,SAACD,GAAD,OAAWU,IAAEoB,MAAM9B,EAAMY,WAAW,SAACE,GAAD,OAAWC,SAASD,EAAME,aAC5FM,EAASZ,IAAEoB,MAAMnC,EAAKM,SAAS,SAACD,GAAD,OAAW,EAAKO,iBAAiBP,EAAMQ,aAC5E,MAAO,CACLU,QAASvB,EAAKuB,QACdF,MAAOA,EACPK,OAAQX,IAAEoB,MAAMnC,EAAKM,SAAS,SAACD,GAAD,OAAWU,IAAEoB,MAAM9B,EAAMY,WAAW,SAACE,GAAD,OAAWC,SAASD,EAAMO,cAC5FC,OAAQA,EACRC,MAAOP,EAAQM,MAEf,CAAC,SAAU,CAAC,c,KChJP,M,2FANb,WACE,OAAO,IAAI5C,M,8BCFfqD,IAAWC,cAAc,SAElB,IAAMC,EAAQ,SAACC,GAAW,IAAD,EAEGC,oBAAS,GAFZ,mBAEvBC,EAFuB,KAEVC,EAFU,KAQxBC,EAAgB,CACpBC,MAAO,OACPC,QAAS,OACTC,UAAW,OACXC,SAAU,OACVC,MAAuB,OAAfT,EAAMU,KAAgB,MAAuB,OAAfV,EAAMU,KAAgB,MAAQ,OACpEC,QAAS,IACTC,gBAAiB,QACjBC,OAAQ,kBACRC,aAAc,MACdC,UAAW,iCAGbC,qBAAU,kBAAMb,EAAUH,EAAMiB,OAAO,MAAK,CAACjB,IAO7C,OACE,eAAC,IAAD,CACEiB,OAAQf,EACRgB,eAAgBlB,EAAMkB,eACtBC,eAAgB,IAChBC,MAAO,CACLC,QA9BgB,CACpBT,gBAAiB,SA8BbU,QAASlB,GANb,UASE,qBAAKmB,UAAU,yBAAf,SACE,wBAAQA,UAAU,iBAAiBC,QAAS,kBAfhDxB,EAAMiB,OAAO,IAAK,OAClBd,GAAU,IAcN,iBAEF,qBAAKoB,UAAU,YAAYH,MAAO,CAACK,WAAY,KAA/C,SACGzB,EAAM0B,e,cCwCAC,MAjFf,YAAmC,IAAVC,EAAS,EAATA,OAAS,EACE3B,oBAAS,GADX,mBACzB4B,EADyB,KACdC,EADc,OAER7B,mBAAS,IAFD,mBAEzB8B,EAFyB,KAEnBC,EAFmB,OAGA/B,mBAAS,GAHT,mBAGzBgC,EAHyB,KAGfC,EAHe,OAIFjC,mBAAS,CAAC,KAJR,mBAIzBjB,EAJyB,KAIhBmD,EAJgB,KAMhCnB,qBAAU,WACRoB,MACC,CAACL,EAAME,EAAUjD,IAEpB,IAAMoD,EAAW,WACf,IAAIC,GAAe,EACbC,EAAmB,GACzBtD,EAAQd,SAAQ,SAACgB,GACD,KAAXA,GAAiBoD,EAAiBhD,QAAQJ,IAAW,EACtDmD,GAAe,EAEfC,EAAiBnF,KAAK+B,MAG1B4C,EAAsB,KAATC,GAA4B,KAAbE,GAAmBI,IA4B3CE,EAAevD,EAAQL,KAAI,SAACO,EAAQjB,GACxC,OACE,sBAAiBsD,UAAU,sBAA3B,UACE,uBAAOiB,QAAS,kBAAkBvE,EAAlC,yBACA,uBAAOsD,UAAU,YAAYnE,GAAI,kBAAkBa,EAAOwE,KAAK,OAAOC,MAAOxD,EAASyD,YAAY,cAAcC,SAAU,SAACC,GAAD,OAzB1G,SAAC5E,EAAO8D,GAC5B,IAAMe,EAAI,YAAO9D,GACjB8D,EAAK7E,GAAS8D,EACdI,EAAWW,GAsB0HC,CAAc9E,EAAO4E,EAAEG,OAAON,YAFvJzE,MAOd,OACE,sBAAKsD,UAAU,4BAAf,UACE,gCACE,sBAAKA,UAAU,sBAAf,UACE,uBAAOiB,QAAQ,sBAAf,6BACA,uBAAOjB,UAAU,YAAYnE,GAAG,sBAAsBqF,KAAK,OAAOC,MAAOX,EAAMa,SAAU,SAACC,GAAD,OAAOb,EAAQa,EAAEG,OAAON,QAAQC,YAAY,uBAEvI,sBAAKpB,UAAU,sBAAf,UACE,uBAAOiB,QAAQ,gBAAf,uBACA,uBAAOjB,UAAU,YAAYnE,GAAG,gBAAgBqF,KAAK,SAASC,MAAOT,EAAUW,SAAU,SAACC,GAAD,OAAOX,EAAYW,EAAEG,OAAON,QAAQC,YAAY,oBAG7I,gCACE,sBAAKpB,UAAU,wBAAf,UACE,oBAAIA,UAAU,YAAd,qBACA,wBAAQA,UAAU,iBAAiBC,QAAS,WAhDlDW,EAAW,GAAD,mBAAKnD,GAAL,CAAc,OAgDlB,kBAEDuD,KAEH,wBAAQf,QAAS,WA1ChBK,GACDoB,EAAShG,cAAciG,KAAK,CAC1B9F,GAAI+F,cACJC,QAAS,IAAIC,KACbtB,KAAMA,EACNE,SAAUA,EACVjD,QAASA,EACTpB,MAAO,KACN0F,MAAK,SAACvG,GACP6E,QAiC6B2B,UAAW1B,EAA1C,sB,uBC9DS2B,MAjBf,YAAyC,IAAfzG,EAAc,EAAdA,WAElBiC,EAAUjC,EAAWiC,QAAQL,KAAI,SAACO,EAAQjB,GAAT,OAAmB,sBAAMsD,UAAU,eAAhB,SAA4CrC,GAARjB,MAE9F,OACE,sBAAKsD,UAAU,uBAAuBC,QAAS,kBAAMiC,OAAOC,SAAW,eAAiB3G,EAAWK,IAAnG,UACE,sBAAKmE,UAAU,WAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgCxE,EAAWgF,OAC3C,sBAAMR,UAAU,oBAAhB,SAAqCoC,IAAO5G,EAAWqG,SAASQ,OAAO,mBAEzE,4CAAe7G,EAAWkF,YAC1B,yCACA,qBAAKV,UAAU,wBAAf,SAAwCvC,Q,MCD/B6E,MAXf,YAAwC,IAEhCC,EAF+B,EAAd7G,YAEa0B,KAAI,SAAC5B,GAAD,OAAgB,cAAC,EAAD,CAAoCA,WAAYA,GAA3BA,EAAWK,OAExF,OACE,qBAAKmE,UAAU,2BAAf,SACGuC,K,MCsCQC,MAxCf,WAAiB,IAAD,EACmB9D,mBAAS,EAAC,IAD7B,mBACPC,EADO,KACMC,EADN,OAEwBF,mBAAS,IAFjC,mBAEPhD,EAFO,KAEM+G,EAFN,KAIdhD,qBAAU,WACRiD,MACC,IAEH,IAAMC,EAAa,WACjB/D,EAAU,EAAC,KAGP8D,EAAkB,WACtBhB,EAAShG,cAAce,OAAOsF,MAAK,SAACtF,GAClCgG,EAAehG,OASnB,OACE,sBAAKuD,UAAU,gBAAf,UACE,qBAAKA,UAAU,0CAAf,SAAyD,wBAAQC,QAAS,kBAAMrB,EAAU,EAAC,KAAlC,gCACzD,6CACA,cAAC,EAAD,CAAgBlD,YAAaA,IAE7B,cAAC,EAAD,CACIgE,OAAQf,EACRgB,eAAgBgD,EAChBxD,KAAK,KAHT,SAKE,cAAC,EAAD,CAAgBkB,OAAQ,kBAf5BqC,SACAC,a,oBC4DWC,MAjFf,YAAoC,IAAhB1G,EAAe,EAAfA,KAAMmE,EAAS,EAATA,OAAS,EACC3B,oBAAS,GADV,mBAC1B4B,EAD0B,KACfC,EADe,OAEP7B,mBAAS,CACjC7C,GAAI+F,cACJ7E,SAAU,GACVI,UAAWjB,EAAKuB,QAAQL,KAAI,SAACO,GAC3B,MAAO,CACLA,OAAQA,EACRJ,MAAO,GACPK,OAAQ,SATmB,mBAE1BrB,EAF0B,KAEnBsG,EAFmB,KAcjCpD,qBAAU,WACRoB,MACC,CAACtE,IAEJ,IAAMsE,EAAW,WACf,IAAIiC,GAAiB,EACrBvG,EAAMY,UAAUR,SAAQ,SAAAU,GACH,KAAhBA,EAAME,OAAiC,KAAjBF,EAAMO,SAC7BkF,GAAiB,MAGrBvC,EAAgC,KAAnBhE,EAAMQ,UAAmB+F,IA6BlC3F,EAAYZ,EAAMY,UAAUC,KAAI,SAACC,EAAOX,GAC5C,OACE,sBAAiBsD,UAAU,+BAA3B,UACE,uBAAOA,UAAU,YAAjB,SAA8B3C,EAAMM,SACpC,uBAAO9B,GAAI,kBAAkBa,EAAOwE,KAAK,SAASC,MAAO9D,EAAME,MAAQ6D,YAAY,QAAQC,SAAU,SAACC,GAAD,OA9BpF,SAAC5E,EAAOyE,GAC7B,IAAM4B,EAAS,eAAOxG,GACtBwG,EAAU5F,UAAUT,GAAOa,MAAQ4D,EACnC0B,EAASE,GA2BuGC,CAAetG,EAAO4E,EAAEG,OAAON,UAC3I,uBAAOtF,GAAI,kBAAkBa,EAAOwE,KAAK,SAASC,MAAO9D,EAAMO,OAASwD,YAAY,SAASC,SAAU,SAACC,GAAD,OAzBrF,SAAC5E,EAAOyE,GAC9B,IAAM4B,EAAS,eAAOxG,GACtBwG,EAAU5F,UAAUT,GAAOkB,OAASuD,EACpC0B,EAASE,GAsByGE,CAAgBvG,EAAO4E,EAAEG,OAAON,YAHtIzE,MAQd,OACE,sBAAKsD,UAAU,yBAAf,UACE,8BACE,sBAAKA,UAAU,sBAAf,UACE,uBAAOiB,QAAQ,qBAAf,4BACA,uBAAOjB,UAAU,YAAYnE,GAAG,qBAAqBqF,KAAK,SAASC,MAAO5E,EAAMQ,SAAUsE,SAAU,SAACC,GAAD,OA7BnF,SAACH,GACxB,IAAM4B,EAAS,eAAOxG,GACtBwG,EAAUhG,SAAWoE,EACrB0B,EAASE,GA0BwGG,CAAiB5B,EAAEG,OAAON,QAAQC,YAAY,wBAG7J,gCACE,oBAAIpB,UAAU,wBAAd,qBACC7C,KAEH,wBAAQ8C,QAAS,WA7BhBK,GACDoB,EAAShG,cAAcyH,UAAUjH,EAAKD,aAAcC,EAAKL,GAAIU,GAAOwF,MAAK,SAACxF,GACxE8D,EAAO9D,OA2BsByF,UAAW1B,EAA1C,sB,MCjCS8C,MA7Cf,YAA6B,IAAT7G,EAAQ,EAARA,MACZ8G,EAAoB3B,EAAShG,cADT,EAEFgD,oBAAS,GAFP,mBAEnB4E,EAFmB,KAEbC,EAFa,KAIpBC,EAAcjH,EAAMY,UAAUC,KAAI,SAACC,EAAOX,GAC9C,OACE,+BACE,6BAAKW,EAAMM,SACX,6BAAKN,EAAME,QACX,6BAAKF,EAAMO,WAHJlB,MAab,OACE,sBAAKb,GAAIU,EAAMV,GAAImE,UAAU,aAAaC,QAAS,kBAAMsD,GAASD,IAAlE,UACE,sBAAKtD,UAAU,mBAAf,UACE,gCAAK,sBAAMA,UAAU,wBAAhB,qBAAuDqD,EAAkBrG,cAAcT,MAC5F,gCAAK,sBAAMyD,UAAU,2BAAhB,yBAA8DqD,EAAkBvG,iBAAiBP,EAAMQ,aAC5G,gCAAK,sBAAMiD,UAAU,2BAAhB,qBAA0DqD,EAAkBI,cAAclH,SAEjG,sBAAKyD,WAAYsD,EAAO,cAAgB,IAAM,mBAAoBzD,MAAO,CAACb,UAAWsE,EAXnEI,SAASC,cAAT,WAA2BC,IAAIC,OAAOtH,EAAMV,IAA5C,mBACDiI,aAAe,KAUqF,GAArH,UACE,uBAAM9D,UAAU,UAAhB,uBAAqCzD,EAAMQ,YAC3C,wBAAOiD,UAAU,KAAjB,UACE,gCACE,+BACE,oBAAIH,MAAO,CAACX,MAAO,QAAnB,oBACA,uCACA,0CAGJ,gCACGsE,c,MC3BEO,MAXf,YAA+B,IAEvBC,EAFsB,EAAVxH,QAESY,KAAI,SAACb,EAAOG,GAAR,OAAkB,cAAC,EAAD,CAAuBH,MAAOA,GAAdG,MAEjE,OACE,qBAAKsD,UAAU,aAAf,SACGgE,K,MCqCQC,MAxCf,YAAgD,IAA7B/H,EAA4B,EAA5BA,KAAMgI,EAAsB,EAAtBA,oBAAsB,EACZxF,mBAAS,EAAC,IADE,mBACtCC,EADsC,KACzBC,EADyB,OAEfF,mBAAS,IAFM,mBAEtClC,EAFsC,KAE7B2H,EAF6B,KAI7C1E,qBAAU,WACR0E,EAAWjI,EAAKM,WACf,CAACN,IAEJ,IAAMyG,EAAa,WACjB/D,EAAU,EAAC,KASPnB,EAAUvB,EAAKuB,QAAQL,KAAI,SAACO,EAAQjB,GAAT,OAAmB,sBAAMsD,UAAU,aAAhB,SAA0CrC,GAARjB,MAEtF,OACE,sBAAKsD,UAAU,8BAAf,UACE,wBAASA,UAAU,gBAAgBC,QAAS,kBAAMrB,EAAU,EAAC,KAA7D,uBACA,oBAAIoB,UAAU,cAAd,qBACA,qBAAKA,UAAU,2BAAf,SAA2CvC,IAE3C,oBAAIuC,UAAU,cAAd,qBACA,cAAC,EAAD,CAAWxD,QAASA,IAEpB,cAAC,EAAD,CACIkD,OAAQf,EACRgB,eAAgBgD,EAChBxD,KAAK,KAHT,SAKE,cAAC,EAAD,CAAWjD,KAAMA,EAAMmE,OAAQ,SAAC9D,GAAD,OAtBjB,SAACA,GACnB4H,EAAW,GAAD,mBAAK3H,GAAL,CAAcD,KACxBoG,IACAuB,EAAoB3H,GAmB0B6H,CAAY7H,Y,MC1B/C8H,MAXf,YAAiD,IAA9BhI,EAA6B,EAA7BA,MAAO6H,EAAsB,EAAtBA,oBAElBI,EAAYjI,EAAMe,KAAI,SAAClB,EAAMQ,GAAP,OAAiB,cAAC,EAAD,CAAwBR,KAAMA,EAAMgI,oBAAqBA,GAA1ChI,EAAKL,OAEjE,OACE,qBAAKmE,UAAU,gCAAf,SACGsE,K,MCMQC,MAbf,YAAyC,IAAfC,EAAc,EAAdA,YAExB,OACE,sBAAKxE,UAAU,gBAAf,UACE,8BAAK,mBAAGA,UAAW,gBAAgBwE,EAAYC,KAAM5E,MAAO,CAAC6E,MAAOF,EAAYG,eAChF,qBAAK3E,UAAU,iBAAf,SAAiCwE,EAAYhE,OAC7C,qBAAKR,UAAU,gBAAf,SAAgCwE,EAAY7G,SAC5C,gCAAK,uBAAMqC,UAAU,cAAhB,UAA+BwE,EAAYI,KAA3C,QAA0DJ,EAAYrD,SAC3E,sBAAKnB,UAAU,uBAAf,cAAwCwE,EAAYK,YAApD,W,MCqESC,MA3Ef,YAAoC,IAAVC,EAAS,EAATA,OAClBC,EAAe,GACrB,GAAGD,EAAOtH,QAAQwH,OAAS,EAAG,CAC5B,IAAMC,EAAWjI,IAAEkI,MAAMJ,EAAOtH,SAAS,SAACE,GAAD,OAAYA,EAAOJ,SACtD6H,EAAUnI,IAAEoI,MAAMN,EAAOtH,SAAS,SAACE,GAAD,OAAYA,EAAOJ,SACrD+H,EAAarI,IAAEkI,MAAMJ,EAAOtH,SAAS,SAACE,GAAD,OAAYA,EAAOC,UACxD2H,EAAYtI,IAAEoI,MAAMN,EAAOtH,SAAS,SAACE,GAAD,OAAYA,EAAOC,UACvD4H,EAAevI,IAAEkI,MAAMJ,EAAOtH,SAAS,SAACE,GAAD,OAAYA,EAAOE,UAC1D4H,EAAcxI,IAAEoI,MAAMN,EAAOtH,SAAS,SAACE,GAAD,OAAYA,EAAOE,UAE/DmH,EAAapJ,KAAK,CAChB4E,KAAM,WACN7C,OAAQuH,EAASvH,OACjBiH,KAAM,QACNzD,MAAO+D,EAAS3H,MAChBsH,YAAa,gBACbJ,KAAM,aACNE,UAAW,WAEbK,EAAapJ,KAAK,CAChB4E,KAAM,UACN7C,OAAQ2H,EAAW3H,OACnBiH,KAAM,SACNzD,MAAOmE,EAAW1H,OAClBiH,YAAa,iBACbJ,KAAM,OACNE,UAAW,QAEbK,EAAapJ,KAAK,CAChB4E,KAAM,UACN7C,OAAQ6H,EAAa7H,OACrBiH,KAAM,YACNzD,MAAOqE,EAAa3H,OACpBgH,YAAa,iBACbJ,KAAM,UACNE,UAAW,SAEbK,EAAapJ,KAAK,CAChB4E,KAAM,cACN7C,OAAQyH,EAAQzH,OAChBiH,KAAM,QACNzD,MAAOiE,EAAQ7H,MACfsH,YAAa,eACbJ,KAAM,OACNE,UAAW,cAEbK,EAAapJ,KAAK,CAChB4E,KAAM,WACN7C,OAAQ4H,EAAU5H,OAClBiH,KAAM,SACNzD,MAAOoE,EAAU3H,OACjBiH,YAAa,gBACbJ,KAAM,MACNE,UAAW,SAEbK,EAAapJ,KAAK,CAChB4E,KAAM,aACN7C,OAAQ8H,EAAY9H,OACpBiH,KAAM,YACNzD,MAAOsE,EAAY5H,OACnBgH,YAAa,gBACbJ,KAAM,QACNE,UAAW,WAIf,IAAMe,EAAQV,EAAa5H,KAAI,SAACoH,EAAa9H,GAAd,OAAwB,cAAC,EAAD,CAA6B8H,YAAaA,GAApB9H,MAE7E,OACE,qBAAKsD,UAAU,0CAAf,SACG0F,K,MCuEQC,MA5If,YAAgC,IAAdnK,EAAa,EAAbA,WAAa,EACSkD,mBAAS,GADlB,mBACtBkH,EADsB,KACTC,EADS,OAEDnH,mBAAS,CACnCjB,QAAS,GACTpB,MAAO,KAJoB,mBAEtB0I,EAFsB,KAEde,EAFc,KAO7BrG,qBAAU,WACR,IAAMsG,EAAerC,SAASsC,eAAe,iBAC7CD,EAAaE,SAAS,CACpBC,IAAK,EACLC,KAAOJ,EAAaK,YAAY,EAAKR,EACrCS,SAAU,aAEX,CAACT,IAEJnG,qBAAU,WACRqG,EAAUpE,EAAShG,cAAc4K,WAAW9K,MAC3C,CAACA,IAEJ+K,QAAQC,IAAIzB,GACZ,IAAM0B,EAAmB1B,EAAOtH,QAAQL,KAAI,SAACO,EAAQjB,GACnD,OACE,+BACE,6BAAKA,EAAM,IACX,6BAAKiB,EAAOA,SACZ,6BAAKA,EAAOJ,QACZ,6BAAKI,EAAOE,SACZ,6BAAKP,SAASK,EAAOJ,OAASD,SAASK,EAAOE,YALvC,eAAenB,MAUtBgK,EAAiB3B,EAAO1I,MAAMe,KAAI,SAAClB,EAAMQ,GAC7C,OACE,+BACE,6BAAKA,EAAM,IACX,6BAAKR,EAAKuB,QAAQL,KAAI,SAACO,EAAQjB,GAAT,OAAmB,sBAAkBsD,UAAU,KAA5B,SAAkCrC,GAAvBjB,QACpD,6BAAKR,EAAKqB,QACV,6BAAKrB,EAAK2B,SACV,6BAAKP,SAASpB,EAAKqB,OAASD,SAASpB,EAAK2B,YALnC,aAAanB,MAW1B,OADA6J,QAAQC,IAAIzB,EAAOtH,SAEjB,sBAAKuC,UAAU,uBAAf,UACE,yCACA,sBAAKnE,GAAG,gBAAgBmE,UAAU,gBAAlC,UACE,qBAAKA,UAAU,wBAAf,SACG+E,EAAOtH,QAAQwH,OAAS,GAAK,sBAAKjF,UAAU,uBAAf,UAC3B+E,EAAOtH,QAAQwH,OAAS,GAAK,sBAAKjF,UAAU,qBAAf,UAC5B,qBAAKA,UAAU,UAAf,SAA0B+E,EAAOtH,QAAQ,GAAGE,SAC5C,sBAAKqC,UAAU,eAAf,UACE,qBAAIA,UAAU,gBAAd,cAA+B,sBAAMA,UAAU,UAAhB,mBAC/B,uBAAMA,UAAU,aAAhB,UAA8B1C,SAASyH,EAAOtH,QAAQ,GAAGF,OAASD,SAASyH,EAAOtH,QAAQ,GAAGI,QAA7F,aAEF,sBAAKmC,UAAU,sBAAf,UACE,2CAAc+E,EAAOtH,QAAQ,GAAGF,SAChC,+CAAkBwH,EAAOtH,QAAQ,GAAGI,gBAGvCkH,EAAOtH,QAAQwH,OAAS,GAAK,sBAAKjF,UAAU,0BAAf,UAC5B,qBAAKA,UAAU,UAAf,SAA0B+E,EAAOtH,QAAQ,GAAGE,SAC5C,sBAAKqC,UAAU,eAAf,UACE,qBAAIA,UAAU,gBAAd,cAA+B,sBAAMA,UAAU,UAAhB,mBAC/B,uBAAMA,UAAU,aAAhB,UAA8B1C,SAASyH,EAAOtH,QAAQ,GAAGF,OAASD,SAASyH,EAAOtH,QAAQ,GAAGI,QAA7F,aAEF,sBAAKmC,UAAU,sBAAf,UACE,2CAAc+E,EAAOtH,QAAQ,GAAGF,SAChC,+CAAkBwH,EAAOtH,QAAQ,GAAGI,gBAGvCkH,EAAOtH,QAAQwH,OAAS,GAAK,sBAAKjF,UAAU,oBAAf,UAC5B,qBAAKA,UAAU,UAAf,SAA0B+E,EAAOtH,QAAQ,GAAGE,SAC5C,sBAAKqC,UAAU,eAAf,UACE,qBAAIA,UAAU,gBAAd,cAA+B,sBAAMA,UAAU,UAAhB,mBAC/B,uBAAMA,UAAU,aAAhB,UAA8B1C,SAASyH,EAAOtH,QAAQ,GAAGF,OAASD,SAASyH,EAAOtH,QAAQ,GAAGI,QAA7F,aAEF,sBAAKmC,UAAU,sBAAf,UACE,2CAAc+E,EAAOtH,QAAQ,GAAGF,SAChC,+CAAkBwH,EAAOtH,QAAQ,GAAGI,qBAK5C,sBAAKmC,UAAU,wBAAf,UACE,oBAAIA,UAAU,OAAd,gCACA,qBAAKA,UAAU,kBAAf,SACE,kCACE,gCACE,+BACE,0CACA,wCACA,uCACA,2CACA,4CAGJ,gCACGyG,YAKT,sBAAKzG,UAAU,wBAAf,UACE,oBAAIA,UAAU,OAAd,8BACA,qBAAKA,UAAU,kBAAf,SACE,kCACE,gCACE,+BACE,0CACA,yCACA,uCACA,2CACA,4CAGJ,gCACG0G,YAKT,sBAAK1G,UAAU,wBAAf,UACE,oBAAIA,UAAU,OAAd,0BACA,cAAC,EAAD,CAAiB+E,OAAQA,UAG7B,sBAAK/E,UAAU,OAAf,UACE,qBAAKA,UAA2B,IAAhB4F,EAAoB,SAAW,GAAI3F,QAAS,kBAAM4F,EAAe,MACjF,qBAAK7F,UAA2B,IAAhB4F,EAAoB,SAAW,GAAI3F,QAAS,kBAAM4F,EAAe,MACjF,qBAAK7F,UAA2B,IAAhB4F,EAAoB,SAAW,GAAI3F,QAAS,kBAAM4F,EAAe,MACjF,qBAAK7F,UAA2B,IAAhB4F,EAAoB,SAAW,GAAI3F,QAAS,kBAAM4F,EAAe,a,MCtE1Ec,MAhEf,YAA8D,IAA3C1K,EAA0C,EAA1CA,aAAcwB,EAA4B,EAA5BA,QAASiD,EAAmB,EAAnBA,SAAUL,EAAS,EAATA,OAAS,EACzB3B,oBAAS,GADgB,mBACpD4B,EADoD,KACzCC,EADyC,OAEnC7B,mBAAS,IAF0B,mBAEpDxC,EAFoD,KAE9C0K,EAF8C,KAkB3DnH,qBAAU,WACRhC,EAAQd,SAAQ,SAACgB,EAAQjB,IACK,IAAzBR,EAAK6B,QAAQrB,KACdgH,SAASsC,eAAerI,EAAO,aAAakJ,SAAU,MAG1DhG,MACC,CAAC3E,IAEJ,IAAM2E,EAAW,WACfN,EAAarE,EAAK+I,SAAW3H,SAASoD,KAgBlCoG,EAAmBrJ,EAAQL,KAAI,SAACO,EAAQjB,GAC5C,OACE,sBAAiBsD,UAAU,sBAA3B,UACE,uBAAOiB,QAAStD,EAAO,YAAaqC,UAAU,YAA9C,SAA2DrC,IAC3D,uBAAOuD,KAAK,WAAWrF,GAAI8B,EAAO,YAAakJ,QAAS3K,EAAK6B,QAAQrB,IAAU,EAAG2E,SAAU,SAACC,GAAD,OA5CnF,SAAC5E,EAAOyE,GACrB,IAAM4F,EAAQ,YAAO7K,GACrB,GAAGiF,EACD4F,EAASnL,KAAKc,OACT,CACL,IAAMsK,EAAgB9K,EAAK6B,QAAQrB,GAC/BsK,GAAiB,GACnBD,EAASE,OAAOD,EAAe,GAGnC,IAAME,EAAiBH,EAASI,MAAMC,KAAKC,IAAI,EAAGN,EAAS9B,OAAOvE,GAAWqG,EAAS9B,QACtF2B,EAAQM,GAiC+FI,CAAO5K,EAAO4E,EAAEG,OAAOoF,cAFlHnK,MAOd,OACE,sBAAKsD,UAAU,yBAAf,UACE,gCACE,oBAAIA,UAAU,cAAd,qBACC8G,KAEH,wBAAQ9G,UAAU,KAAKC,QAAS,WA3B/BK,GACDoB,EAAShG,cAAc6L,SAAStL,EAAc,CAC5CJ,GAAI+F,cACJ3F,aAAcA,EACdwB,QAASvB,EAAKkB,KAAI,SAACV,GAAD,OAAWe,EAAQf,MACrCF,QAAS,KACRuF,MAAK,SAAC7F,GACPmE,EAAOnE,OAoBqC8F,UAAW1B,EAAzD,sBCuCSkH,MA5Ff,SAAoB/I,GAAQ,IAAD,EACQC,mBAAS,EAAC,IADlB,mBAClBC,EADkB,KACLC,EADK,OAEWF,mBAAS,CAC3C8B,KAAM,GACNE,SAAU,EACVjD,QAAS,GACTpB,MAAO,KANgB,mBAElBb,EAFkB,KAENiM,EAFM,KASzBhI,qBAAU,WACRiI,MACC,IAEH,IAIMA,EAAiB,WACrBhG,EAAShG,cAAcS,KAAKsC,EAAMlC,MAAMoL,OAAO9L,IAAIkG,MAAK,SAACvG,GACvDiM,EAAcjM,OAYZoM,EAAsB,WAK1B,IAJA,IATiBvL,EASXwL,EAAYrM,EAAWiC,QAAQwH,OAASzJ,EAAWkF,SAEnDoH,EAAmB7K,IAAE8K,QAAQvM,EAAWiC,SACxCuK,EAAc,GACZnL,EAAI,EAAGA,EAAIgL,EAAWhL,IAAK,CAEjC,IADA,IAAMoL,EAAc,GACZC,EAAI,EAAGA,EAAI1M,EAAWkF,SAAUwH,IACtCD,EAAYrM,KAAKkM,EAAgBjL,EAAErB,EAAWkF,SAAWwH,IAE3DF,EAAYpM,KAAK,CACfC,GAAI+F,cACJ3F,aAAcT,EAAWK,GACzB4B,QAASwK,EACTzL,QAAS,KAtBIH,EAyBP2L,EAxBVtG,EAAShG,cAAcyM,UAAU3M,EAAWK,GAAIQ,GAAO0F,MAAK,SAAC1F,GAC3D,IAAM+L,EAAc,eAAO5M,GAC3B4M,EAAe/L,MAAf,sBAA2BA,GAA3B,YAAqC+L,EAAe/L,QACpDoL,EAAcW,OAgCZ3K,EAAUjC,EAAWiC,QAAQL,KAAI,SAACO,EAAQjB,GAC9C,OACE,sBAAMsD,UAAU,KAAhB,SAAkCrC,GAARjB,MAI9B,OACE,sBAAKsD,UAAU,sBAAf,UACE,6BAAKxE,EAAWgF,OAChB,sBAAKR,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UAAsB,sBAAMA,UAAU,sBAAhB,kBAAtB,IAAyEoC,IAAO5G,EAAWqG,SAASQ,OAAO,iBAC3G,gCAAK,sBAAMrC,UAAU,sBAAhB,uBAAL,IAA6DxE,EAAWkF,eAE1E,qBAAKV,UAAU,WAAf,SAA2BvC,IAC3B,cAAC,EAAD,CAASjC,WAAYA,IACrB,oBAAIwE,UAAU,OAAd,mBACA,sBAAKA,UAAU,WAAf,UACE,wBAAQA,UAAU,KAAKC,QAAS,kBAAM2H,KAAtC,4BACA,wBAAQ3H,QAAS,kBAAMrB,EAAU,EAAC,KAAlC,yBAEF,cAAC,EAAD,CAAUvC,MAAOb,EAAWa,MAAO6H,oBAAqB,WAvB1DwD,OAyBE,cAAC,EAAD,CACIhI,OAAQf,EACRgB,eAtEW,WACjBf,EAAU,EAAC,KAsELO,KAAK,KAHT,SAKE,cAAC,EAAD,CAAUlD,aAAcT,EAAWK,GAAI4B,QAASjC,EAAWiC,QAASiD,SAAUlF,EAAWkF,SAAUL,OAAQ,SAACnE,GAlChHwL,aCjCWW,MAlBf,WACE,OACE,sBAAKrI,UAAU,MAAf,UACE,qBAAKA,UAAU,WACf,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsI,KAAK,kBAAkBC,UAAWf,IACzC,cAAC,IAAD,CAAOc,KAAK,IAAZ,SACE,cAAC,EAAD,iBCTCE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3G,MAAK,YAAkD,IAA/C4G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxF,SAASsC,eAAe,SAM1BwC,M","file":"static/js/main.68dcd9da.chunk.js","sourcesContent":["import _ from \"lodash\";\r\nimport mock from './mock.json';\r\n\r\nexport default class TournamentService {\r\n\r\n  constructor() {\r\n    if(!localStorage.getItem('tournaments')){\r\n      localStorage.setItem('tournaments', JSON.stringify(mock));\r\n    }\r\n  }\r\n\r\n  async save(tournament) {\r\n    const tournaments = JSON.parse(localStorage.getItem('tournaments'));\r\n    tournaments.push(tournament);\r\n    localStorage.setItem('tournaments', JSON.stringify(tournaments))\r\n  }\r\n\r\n  async update(id, tournament) {\r\n    const tournaments = JSON.parse(localStorage.getItem('tournaments'));\r\n    const tIndex = this.searchById(tournaments, id);\r\n    tournaments[tIndex] = tournament;\r\n    localStorage.setItem('tournaments', JSON.stringify(tournaments));\r\n  }\r\n\r\n  async list() {\r\n    return JSON.parse(localStorage.getItem('tournaments'));\r\n  }\r\n\r\n  async read(id) {\r\n    const tournaments = JSON.parse(localStorage.getItem('tournaments'));\r\n    const tIndex = this.searchById(tournaments, id);\r\n    return tournaments[tIndex];\r\n  }\r\n\r\n  async saveTeam(tournamentId, team) {\r\n    const tournament = await this.read(tournamentId);\r\n    if(!tournament['teams']){\r\n      tournament['teams'] = [];\r\n    }\r\n    tournament['teams'] = [team, ...tournament['teams']];\r\n    this.update(tournamentId, tournament);\r\n    return team;\r\n  }\r\n\r\n  async saveTeams(tournamentId, teams) {\r\n    const tournament = await this.read(tournamentId);\r\n    if(!tournament['teams']){\r\n      tournament['teams'] = [];\r\n    }\r\n    tournament['teams'] = [...teams, ...tournament['teams']];\r\n    this.update(tournamentId, tournament);\r\n    return teams;\r\n  }\r\n\r\n  async saveMatch(tournamentId, teamId, match) {\r\n    const tournament = await this.read(tournamentId);\r\n    if(!tournament['teams']){\r\n      tournament['teams'] = [];\r\n    }\r\n    const tIndex = this.searchById(tournament['teams'], teamId);\r\n    tournament['teams'][tIndex].matches.push(match);\r\n    this.update(tournamentId, tournament);\r\n    return match;\r\n  }\r\n\r\n  searchById(list, id) {\r\n    let index = -1;\r\n    list.forEach((item, i) => {\r\n      if(item.id === id){\r\n        index = i;\r\n      }\r\n    })\r\n    return index;\r\n  }\r\n\r\n  getMatchPoint(match) {\r\n    return this.getPositionPoint(match.position) + this.getMatchKills(match);\r\n  }\r\n\r\n  getMatchKills(match) {\r\n    return _.sum(match.teamScore.map((score) => parseInt(score.kills)));\r\n  }\r\n\r\n  getPositionPoint(position) {\r\n    switch(position) {\r\n      case '1': return 20;\r\n      case '2': return 15;\r\n      case '3': return 10;\r\n      case '4': return 5;\r\n      case '5': return 3;\r\n      case '6': return 2;\r\n      default: return 0;\r\n    }\r\n  }\r\n\r\n  getKillPoint(kills) {\r\n    return kills;\r\n  }\r\n\r\n  getDamagePoint(dmg) {\r\n    return 0;\r\n  }\r\n\r\n  getScorePoint(score) {\r\n    return 0;\r\n  }\r\n\r\n  getResults(tournament) {\r\n    const players = [...tournament.players];\r\n    const playersResultObject = {};\r\n    players.forEach((player) => {\r\n      if(!playersResultObject[player]){\r\n        playersResultObject[player] = {\r\n          player: player,\r\n          kills: 0,\r\n          damage: 0,\r\n          points: 0,\r\n          total: 0\r\n        }\r\n      }\r\n      tournament.teams.forEach((team) => {\r\n        team.matches.forEach((match) => {\r\n          if(team.players.indexOf(player) > -1){\r\n            playersResultObject[player]['points'] += this.getPositionPoint(match.position);\r\n            playersResultObject[player]['total'] += this.getPositionPoint(match.position);\r\n          }\r\n          match.teamScore.forEach((score) => {\r\n            if(player === score.player) {\r\n              playersResultObject[player]['kills'] += parseInt(score.kills);\r\n              playersResultObject[player]['damage'] += parseInt(score.damage);\r\n              playersResultObject[player]['total'] += parseInt(score.kills);\r\n            }\r\n          })\r\n        })\r\n      })\r\n    })\r\n\r\n    const playersResult = [];\r\n    Object.keys(playersResultObject).forEach((key) => {\r\n      playersResult.push(playersResultObject[key]);\r\n    })\r\n\r\n    return {\r\n      players: _.orderBy(playersResult, ['total'], ['desc']),\r\n      teams: _.orderBy(tournament.teams.map((team) => {\r\n        const kills = _.sumBy(team.matches, (match) => _.sumBy(match.teamScore, (score) => parseInt(score.kills)));\r\n        const points = _.sumBy(team.matches, (match) => this.getPositionPoint(match.position));\r\n        return {\r\n          players: team.players,\r\n          kills: kills,\r\n          damage: _.sumBy(team.matches, (match) => _.sumBy(match.teamScore, (score) => parseInt(score.damage))),\r\n          points: points,\r\n          total: kills + points\r\n        }\r\n      }), ['total'], ['desc'])\r\n    };\r\n  }\r\n\r\n}","import TournamentService from \"./TournamentService\";\r\n\r\nclass Service {\r\n\r\n  tournaments() {\r\n    return new TournamentService();\r\n  }\r\n\r\n}\r\n\r\nexport default new Service();","import { useEffect, useState } from 'react';\r\nimport { default as ReactModal } from 'react-modal';\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nexport const Modal = (props) => {\r\n\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n  const overlayStyles = {\r\n    backgroundColor: '#000a'\r\n  };\r\n\r\n  const contentStyles = {\r\n    inset: 'auto',\r\n    minWith: '99vw',\r\n    maxHeight: '80vh',\r\n    overflow: 'auto',\r\n    width: (props.size === 'lg' ? '90%' : props.size === 'md' ? '60%' : 'auto'),\r\n    padding: '0',\r\n    backgroundColor: '#111c',\r\n    border: '1px solid #2f2c',\r\n    borderRadius: '0px',\r\n    boxShadow: '0px 0px 20px rgb(0, 0, 0, .4)',\r\n  };\r\n\r\n  useEffect(() => setIsOpen(props.isOpen[0]), [props]);\r\n\r\n  const closeModal = () => {\r\n    props.isOpen[0] = false;\r\n    setIsOpen(false)\r\n  }\r\n\r\n  return (\r\n    <ReactModal\r\n      isOpen={modalIsOpen}\r\n      onRequestClose={props.onRequestClose}\r\n      closeTimeoutMS={300}\r\n      style={{\r\n        overlay: overlayStyles,\r\n        content: contentStyles\r\n      }}\r\n    >\r\n      <div className='h-layout justify-right'>\r\n        <button className='btn--secondary' onClick={() => closeModal()}>X</button>\r\n      </div>\r\n      <div className=\"container\" style={{paddingTop: '0'}}>\r\n        {props.children}\r\n      </div>\r\n    </ReactModal>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\nimport Services from '../../../services/Services';\nimport { v4 as uuidv4 } from 'uuid';\nimport './TournamentForm.css';\nimport { indexOf } from 'lodash';\n\nfunction TournamentForm({onSave}) {\n  const [validForm, setValidForm] = useState(false);\n  const [name, setName] = useState('');\n  const [teamSize, setTeamSize] = useState(1);\n  const [players, setPlayers] = useState(['']);\n\n  useEffect(() => {\n    validate();\n  }, [name, teamSize, players]);\n\n  const validate = () => {\n    let validPlayers = true;\n    const validatedPlayers = []\n    players.forEach((player) => {\n      if(player === '' || validatedPlayers.indexOf(player) > -1){\n        validPlayers = false;\n      } else {\n        validatedPlayers.push(player)\n      }\n    });\n    setValidForm(name !== '' && teamSize !== '' && validPlayers);\n  }\n \n  const addPlayer = () => {\n    setPlayers([...players, '']);\n  };\n \n  const setPlayerName = (index, name) => {\n    const copy = [...players];\n    copy[index] = name\n    setPlayers(copy);\n  };\n \n  const save = () => {\n    if(validForm) {\n      Services.tournaments().save({\n        id: uuidv4(),\n        created: new Date(),\n        name: name,\n        teamSize: teamSize,\n        players: players,\n        teams: []\n      }).then((tournament) => {\n        onSave();\n      });\n    }\n  };\n\n  const playersInput = players.map((player, index) => {\n    return (\n      <div key={index} className=\"form-group h-layout\">\n        <label htmlFor={'playerNameInput'+index}>Player name</label>\n        <input className='flex-grow' id={'playerNameInput'+index} type='text' value={player}  placeholder='Player Name' onChange={(e) => setPlayerName(index, e.target.value)}/>\n      </div>\n    )\n  });\n\n  return (\n    <div className='mt v-layout align-stretch'>\n      <div>\n        <div className=\"form-group h-layout\">\n          <label htmlFor='tournamentNameInput'>Tournament name</label>\n          <input className='flex-grow' id='tournamentNameInput' type='text' value={name} onChange={(e) => setName(e.target.value)} placeholder='Tournament Name'/>\n        </div>\n        <div className=\"form-group h-layout\">\n          <label htmlFor='teamSizeInput'>Team size</label>\n          <input className='flex-grow' id='teamSizeInput' type='number' value={teamSize} onChange={(e) => setTeamSize(e.target.value)} placeholder='Team size'/>\n        </div>\n      </div>\n      <div>\n        <div className='h-layout justify-left'>\n          <h3 className='flex-grow'>Players</h3>\n          <button className='btn--secondary' onClick={() => addPlayer()}>+</button>\n        </div>\n        {playersInput}\n      </div>\n      <button onClick={() => save()} disabled={!validForm}>save</button>\n    </div>\n  );\n}\n\nexport default TournamentForm;\n","import moment from 'moment';\nimport './TournamentCard.css';\n\nfunction TournamentCard({ tournament }) {\n\n  const players = tournament.players.map((player, index) => <span className='mr-3 text-sm' key={index}>{player}</span>)\n\n  return (\n    <div className='card tournament-card' onClick={() => window.location = '#tournament/' + tournament.id}>\n      <div className='h-layout'>\n        <h3 className='flex-grow mr-3'>{tournament.name}</h3>\n        <span className='text-sm text-hint'>{moment(tournament.created).format('MM/DD/YYYY')}</span>\n      </div>\n      <p>Team size: {tournament.teamSize}</p>\n      <h3>Players</h3>\n      <div className='h-layout justify-left'>{players}</div>\n    </div>\n  );\n}\n\nexport default TournamentCard;\n","import TournamentCard from '../TournamentCard/TournamentCard';\nimport './TournamentList.css';\n\nfunction TournamentList({tournaments}) {\n\n  const tournamentCards = tournaments.map((tournament) => <TournamentCard key={tournament.id} tournament={tournament}/>)\n\n  return (\n    <div className='h-layout tournament-list'>\n      {tournamentCards}\n    </div>\n  );\n}\n\nexport default TournamentList;\n","import { useEffect, useState } from 'react';\nimport Services from '../../../services/Services';\nimport { Modal } from '../../elements/Modal';\nimport TournamentForm from '../TournamentForm/TournamentForm';\nimport TournamentList from '../TournamentList/TournamentList';\nimport './Home.css';\n\nfunction Home() {\n  const [modalIsOpen, setIsOpen] = useState([false]);\n  const [tournaments, setTournaments] = useState([]);\n\n  useEffect(() => {\n    loadTournaments();\n  }, [])\n\n  const closeModal = () => {\n    setIsOpen([false]);\n  };\n\n  const loadTournaments = () => {\n    Services.tournaments().list().then((list) => {\n      setTournaments(list);\n    });\n  }\n\n  const onSaveTournaments = () => {\n    loadTournaments();\n    closeModal();\n  }\n\n  return (\n    <div className='home v-layout'>\n      <div className='flex-grow v-layout start-tournament-btn'><button onClick={() => setIsOpen([true])}>Start Tournament</button></div>\n      <h3>Tournaments</h3>\n      <TournamentList tournaments={tournaments}/>\n      \n      <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          size='sm'\n        >\n        <TournamentForm onSave={() => onSaveTournaments()} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default Home;\n","import { useState } from 'react';\nimport Services from '../../../services/Services';\nimport { v4 as uuidv4, validate } from 'uuid';\nimport './MatchForm.css';\nimport { useEffect } from 'react';\n\nfunction MatchForm({team, onSave}) {\n  const [validForm, setValidForm] = useState(false);\n  const [match, setMatch] = useState({\n    id: uuidv4(),\n    position: '',\n    teamScore: team.players.map((player) => {\n      return {\n        player: player,\n        kills: '',\n        damage: ''\n      }\n    })\n  })\n\n  useEffect(() => {\n    validate();\n  }, [match]);\n\n  const validate = () => {\n    let validTeamScore = true;\n    match.teamScore.forEach(score => {\n      if(score.kills === '' || score.damage === ''){\n        validTeamScore = false;\n      }\n    });\n    setValidForm(match.position !== '' && validTeamScore);\n  }\n\n  const setPlayerKills = (index, value) => {\n    const matchCopy = {...match};\n    matchCopy.teamScore[index].kills = value;\n    setMatch(matchCopy);\n  }\n\n  const setPlayerDamage = (index, value) => {\n    const matchCopy = {...match};\n    matchCopy.teamScore[index].damage = value;\n    setMatch(matchCopy);\n  }\n\n  const setMatchPosition = (value) => {\n    const matchCopy = {...match};\n    matchCopy.position = value;\n    setMatch(matchCopy);\n  }\n\n  const save = () => {\n    if(validForm){\n      Services.tournaments().saveMatch(team.tournamentId, team.id, match).then((match) => {\n        onSave(match);\n      })\n    }\n  }\n\n  const teamScore = match.teamScore.map((score, index) => {\n    return (\n      <div key={index} className=\"form-group match-player-form\">\n        <label className='flex-grow'>{score.player}</label>\n        <input id={'playerNameInput'+index} type='number' value={score.kills}  placeholder='Kills' onChange={(e) => setPlayerKills(index, e.target.value)}/>\n        <input id={'playerNameInput'+index} type='number' value={score.damage}  placeholder='Damage' onChange={(e) => setPlayerDamage(index, e.target.value)}/>\n      </div>\n    )\n  });\n\n  return (\n    <div className='v-layout align-stretch'>\n      <div>\n        <div className=\"form-group h-layout\">\n          <label htmlFor='matchPositionInput'>Match Position</label>\n          <input className='flex-grow' id='matchPositionInput' type='number' value={match.position} onChange={(e) => setMatchPosition(e.target.value)} placeholder='Match position'/>\n        </div>\n      </div>\n      <div>\n        <h3 className='flex-grow text-accent'>Players</h3>\n        {teamScore}\n      </div>\n      <button onClick={() => save()} disabled={!validForm}>save</button>\n    </div>\n  );\n}\n\nexport default MatchForm;\n","import { useState } from 'react';\nimport Services from '../../../services/Services';\nimport './MatchCard.css';\n\nfunction MatchCard({match}) {\n  const tournamentService = Services.tournaments();\n  const [open, setOpen] = useState(false);\n\n  const playerScore = match.teamScore.map((score, index) => {\n    return (\n      <tr key={index}>\n        <td>{score.player}</td>\n        <td>{score.kills}</td>\n        <td>{score.damage}</td>\n      </tr>\n    );\n  });\n\n  const getMatchDetailHeight = () => {\n    const matchDetail = document.querySelector(`#${CSS.escape(match.id)} .match-detail`);\n    return matchDetail.scrollHeight + 'px';\n  }\n\n  return (\n    <div id={match.id} className='match card' onClick={() => setOpen(!open)}>\n      <div className='h-layout text-sm'>\n        <div><span className='text-accent text-bold'>Kills: </span>{tournamentService.getMatchKills(match)}</div>\n        <div><span className='text-accent text-bold ml'>Match Pts: </span>{tournamentService.getPositionPoint(match.position)}</div>\n        <div><span className='text-accent text-bold ml'>TOTAL: </span>{tournamentService.getMatchPoint(match)}</div>\n      </div>\n      <div className={(open ? 'match--open' : '') + ' mt match-detail'} style={{maxHeight: open ? getMatchDetailHeight() : 0}}>\n        <span className='text-sm'>Position: {match.position}</span>\n        <table className='mt'>\n          <thead>\n            <tr>\n              <th style={{width: '100%'}}>Player</th>\n              <th>Kills</th>\n              <th>Dmg</th>\n            </tr>\n          </thead>\n          <tbody>\n            {playerScore}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default MatchCard;\n","import MatchCard from '../MatchCard/MatchCard';\nimport './MatchList.css';\n\nfunction MatchList({matches}) {\n\n  const matchCards = matches.map((match, index) => <MatchCard key={index} match={match} />);\n\n  return (\n    <div className='match-list'>\n      {matchCards}\n    </div>\n  );\n}\n\nexport default MatchList;\n","import { useEffect, useState } from 'react';\nimport { Modal } from '../../elements/Modal';\nimport MatchForm from '../MatchForm/MatchForm';\nimport MatchList from '../MatchList/MatchList';\nimport './TeamCard.css';\n\nfunction TeamCard({team, onSaveMatchCallback}) {\n  const [modalIsOpen, setIsOpen] = useState([false]);\n  const [matches, setMatches] = useState([]);\n\n  useEffect(() => {\n    setMatches(team.matches);\n  }, [team]);\n \n  const closeModal = () => {\n    setIsOpen([false]);\n  };\n\n  const onSaveMatch = (match) => {\n    setMatches([...matches, match]);\n    closeModal();\n    onSaveMatchCallback(match);\n  };\n\n  const players = team.players.map((player, index) => <span className='mr text-sm' key={index}>{player}</span>)\n\n  return (\n    <div className='card v-layout align-stretch'>\n      <button  className='btn--tertiary' onClick={() => setIsOpen([true])}>Add Match</button>\n      <h4 className='text-accent'>Players</h4>\n      <div className='h-layout justify-stretch'>{players}</div>\n\n      <h4 className='text-accent'>Matches</h4>\n      <MatchList matches={matches} />\n      \n      <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          size='sm'\n        >\n        <MatchForm team={team} onSave={(match) => onSaveMatch(match)} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default TeamCard;\n","import TeamCard from '../TeamCard/TeamCard';\nimport './TeamList.css';\n\nfunction TeamList({teams, onSaveMatchCallback}) {\n\n  const teamCards = teams.map((team, index) => <TeamCard key={team.id} team={team} onSaveMatchCallback={onSaveMatchCallback}/>);\n\n  return (\n    <div className='team-list h-layout align-left'>\n      {teamCards}\n    </div>\n  );\n}\n\nexport default TeamList;\n","import './AchievementCard.css';\n\nfunction AchievementCard({achievement}) {\n  \n  return (\n    <div className='card v-layout'>\n      <div><i className={'fa-2x fas fa-'+achievement.icon} style={{color: achievement.iconColor}}></i></div>\n      <div className='text-accent mt'>{achievement.name}</div>\n      <div className='text-xl mt mb'>{achievement.player}</div>\n      <div><span className='text-accent'>{achievement.attr}: </span>{achievement.value}</div>\n      <div className='mt text-sm text-hint'>({achievement.description})</div>\n    </div>\n  );\n}\n\nexport default AchievementCard;\n","import _ from 'lodash';\nimport AchievementCard from '../AchievementCard/AchievementCard';\nimport './AchievementList.css';\n\nfunction AchievementList({result}) {\n  const achievements = [];\n  if(result.players.length > 0) {\n    const highKill = _.maxBy(result.players, (player) => player.kills);\n    const lowKill = _.minBy(result.players, (player) => player.kills);\n    const highDamage = _.maxBy(result.players, (player) => player.damage);\n    const minDamage = _.minBy(result.players, (player) => player.damage);\n    const highMatchPts = _.maxBy(result.players, (player) => player.points);\n    const lowMatchPts = _.minBy(result.players, (player) => player.points);\n  \n    achievements.push({\n      name: 'Assassin',\n      player: highKill.player,\n      attr: 'Kills',\n      value: highKill.kills,\n      description: 'Highest Kills',\n      icon: 'crosshairs',\n      iconColor: 'yellow'\n    });\n    achievements.push({\n      name: 'Butcher',\n      player: highDamage.player,\n      attr: 'Damage',\n      value: highDamage.damage,\n      description: 'Highest Damage',\n      icon: 'tint',\n      iconColor: 'red'\n    });\n    achievements.push({\n      name: 'Support',\n      player: highMatchPts.player,\n      attr: 'Match Pts',\n      value: highMatchPts.points,\n      description: 'Highest Points',\n      icon: 'toolbox',\n      iconColor: 'aqua'\n    });\n    achievements.push({\n      name: 'Bird Hunter',\n      player: lowKill.player,\n      attr: 'Kills',\n      value: lowKill.kills,\n      description: 'Lowest Kills',\n      icon: 'dove',\n      iconColor: 'aliceblue'\n    });\n    achievements.push({\n      name: 'Sleeping',\n      player: minDamage.player,\n      attr: 'Damage',\n      value: minDamage.damage,\n      description: 'Lowest Damage',\n      icon: 'bed',\n      iconColor: 'gray'\n    });\n    achievements.push({\n      name: 'Distracted',\n      player: lowMatchPts.player,\n      attr: 'Match Pts',\n      value: lowMatchPts.points,\n      description: 'Lowest Points',\n      icon: 'music',\n      iconColor: 'purple'\n    });\n  }\n\n  const cards = achievements.map((achievement, index) => <AchievementCard key={index} achievement={achievement} />);\n\n  return (\n    <div className='achievement-list h-layout align-stretch'>\n      {cards}\n    </div>\n  );\n}\n\nexport default AchievementList;\n","import { useEffect, useState } from 'react';\nimport Services from '../../../services/Services';\nimport AchievementList from '../AchievementList/AchievementList';\nimport './Results.css';\n\nfunction Results({tournament}) {\n  const [activePanel, setActivePanel] = useState(0);\n  const [result, setResult] = useState({\n    players: [],\n    teams: []\n  })\n\n  useEffect(() => {\n    const resultSlider = document.getElementById('result-slider');\n    resultSlider.scrollTo({\n      top: 0,\n      left: (resultSlider.scrollWidth/4) * activePanel, \n      behavior: 'smooth'\n    })\n  }, [activePanel]);\n\n  useEffect(() => {\n    setResult(Services.tournaments().getResults(tournament));\n  }, [tournament]);\n\n  console.log(result)\n  const playerScoreTable = result.players.map((player, index) => {\n    return (\n      <tr key={'playerScore-'+index}>\n        <td>{index+1}</td>\n        <td>{player.player}</td>\n        <td>{player.kills}</td>\n        <td>{player.points}</td>\n        <td>{parseInt(player.kills) + parseInt(player.points)}</td>\n      </tr>\n    )\n  });\n\n  const teamScoreTable = result.teams.map((team, index) => {\n    return (\n      <tr key={'teamScore-'+index}>\n        <td>{index+1}</td>\n        <td>{team.players.map((player, index) => <span key={index} className='mr'>{player}</span>)}</td>\n        <td>{team.kills}</td>\n        <td>{team.points}</td>\n        <td>{parseInt(team.kills) + parseInt(team.points)}</td>\n      </tr>\n    )\n  });\n\n  console.log(result.players);\n  return (\n    <div className='v-layout result mt-3'>\n      <h3>Results</h3>\n      <div id='result-slider' className='result-slider'>\n        <div className='result-slide v-layout'>\n          {result.players.length > 0 && <div className='h-layout align-right'>\n            {result.players.length > 1 && <div className='place second-place'>\n              <div className='text-xl'>{result.players[1].player}</div>\n              <div className='box v-layout'>\n                <h1 className='text-white m0'>2<span className='text-sm'>nd</span></h1>\n                <span className='text-sm mt'>{parseInt(result.players[1].kills) + parseInt(result.players[1].points)} Pts</span>\n              </div>\n              <div className='v-layout text-sm mt'>\n                <span>Kills: {result.players[1].kills}</span>\n                <span>Match Pts: {result.players[1].points}</span>\n              </div>\n            </div> }\n            {result.players.length > 0 && <div className='place first-place ml mr'>\n              <div className='text-xl'>{result.players[0].player}</div>\n              <div className='box v-layout'>\n                <h1 className='text-white m0'>1<span className='text-sm'>st</span></h1>\n                <span className='text-sm mt'>{parseInt(result.players[0].kills) + parseInt(result.players[0].points)} Pts</span>\n              </div>\n              <div className='v-layout text-sm mt'>\n                <span>Kills: {result.players[0].kills}</span>\n                <span>Match Pts: {result.players[0].points}</span>\n              </div>\n            </div> }\n            {result.players.length > 2 && <div className='place third-place'>\n              <div className='text-xl'>{result.players[2].player}</div>\n              <div className='box v-layout'>\n                <h1 className='text-white m0'>3<span className='text-sm'>rd</span></h1>\n                <span className='text-sm mt'>{parseInt(result.players[2].kills) + parseInt(result.players[2].points)} Pts</span>\n              </div>\n              <div className='v-layout text-sm mt'>\n                <span>Kills: {result.players[2].kills}</span>\n                <span>Match Pts: {result.players[2].points}</span>\n              </div>\n            </div> }\n          </div> }\n        </div>\n        <div className='result-slide v-layout'>\n          <h3 className='mt-3'>Player Score Table</h3>\n          <div className='table-container'>\n            <table>\n              <thead>\n                <tr>\n                  <th>Position</th>\n                  <th>Player</th>\n                  <th>Kills</th>\n                  <th>Match Pts</th>\n                  <th>Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                {playerScoreTable}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className='result-slide v-layout'>\n          <h3 className='mt-3'>Team Score Table</h3>\n          <div className='table-container'>\n            <table>\n              <thead>\n                <tr>\n                  <th>Position</th>\n                  <th>Players</th>\n                  <th>Kills</th>\n                  <th>Match Pts</th>\n                  <th>Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                {teamScoreTable}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className='result-slide v-layout'>\n          <h3 className='mt-3'>Achievements</h3>\n          <AchievementList result={result}/>\n        </div>\n      </div>\n      <div className='dots'>\n        <div className={activePanel === 0 ? 'active' : ''} onClick={() => setActivePanel(0)}></div>\n        <div className={activePanel === 1 ? 'active' : ''} onClick={() => setActivePanel(1)}></div>\n        <div className={activePanel === 2 ? 'active' : ''} onClick={() => setActivePanel(2)}></div>\n        <div className={activePanel === 3 ? 'active' : ''} onClick={() => setActivePanel(3)}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Results;\n","import { useEffect, useState } from 'react';\nimport Services from '../../../services/Services';\nimport { v4 as uuidv4 } from 'uuid';\nimport './TeamForm.css';\n\nfunction TeamForm({tournamentId, players, teamSize, onSave}) {\n  const [validForm, setValidForm] = useState(false);\n  const [team, setTeam] = useState([])\n\n  const select = (index, value) => {\n    const teamCopy = [...team];\n    if(value){\n      teamCopy.push(index);\n    } else {\n      const indexToRemove = team.indexOf(index);\n      if (indexToRemove > -1) {\n        teamCopy.splice(indexToRemove, 1);\n      }\n    }\n    const teamCopySliced = teamCopy.slice(Math.max(0, teamCopy.length-teamSize), teamCopy.length);\n    setTeam(teamCopySliced);\n  }\n\n  useEffect(() => {\n    players.forEach((player, index) => {\n      if(team.indexOf(index) === -1){\n        document.getElementById(player+'_checkbox').checked = false\n      }\n    });\n    validate();\n  }, [team]);\n\n  const validate = () => {\n    setValidForm(team.length === parseInt(teamSize));\n  }\n\n  const save = () => {\n    if(validForm) {\n      Services.tournaments().saveTeam(tournamentId, {\n        id: uuidv4(),\n        tournamentId: tournamentId,\n        players: team.map((index) => players[index]),\n        matches: []\n      }).then((team) => {\n        onSave(team);\n      });\n    }\n  }\n\n  const playerCheckboxes = players.map((player, index) => {\n    return (\n      <div key={index} className=\"form-group h-layout\">\n        <label htmlFor={player+'_checkbox'} className='flex-grow'>{player}</label>\n        <input type='checkbox' id={player+'_checkbox'} checked={team.indexOf(index) > -1} onChange={(e) => select(index, e.target.checked)}/>\n      </div>\n    )\n  });\n\n  return (\n    <div className='v-layout align-stretch'>\n      <div>\n        <h3 className='text-accent'>Players</h3>\n        {playerCheckboxes}\n      </div>\n      <button className='mt' onClick={() => save()} disabled={!validForm}>save</button>\n    </div>\n  );\n}\n\nexport default TeamForm;\n","import { useEffect, useState } from 'react';\nimport Services from '../../../services/Services';\nimport { v4 as uuidv4 } from 'uuid';\nimport _, { set } from 'lodash';\nimport './Tournament.css';\nimport TeamList from '../TeamList/TeamList';\nimport Results from '../Results/Results';\nimport { Modal } from '../../elements/Modal';\nimport TeamForm from '../TeamForm/TeamForm';\nimport moment from 'moment';\n\nfunction Tournament(props) {\n  const [modalIsOpen, setIsOpen] = useState([false]);\n  const [tournament, setTournament] = useState({\n    name: '',\n    teamSize: 0,\n    players: [],\n    teams: []\n  });\n\n  useEffect(() => {\n    loadTournament();\n  }, []);\n\n  const closeModal = () => {\n    setIsOpen([false]);\n  };\n\n  const loadTournament = () => {\n    Services.tournaments().read(props.match.params.id).then((tournament) => {\n      setTournament(tournament);\n    });\n  }\n\n  const saveTeams = (teams) => {\n    Services.tournaments().saveTeams(tournament.id, teams).then((teams) => {\n      const tournamentCopy = {...tournament};\n      tournamentCopy.teams = [...teams, ...tournamentCopy.teams];\n      setTournament(tournamentCopy);\n    });\n  }\n\n  const generateRandomTeams = () => {\n    const teamCount = tournament.players.length / tournament.teamSize;\n\n    const playersShuffled =  _.shuffle(tournament.players);\n    const randomTeams = []\n    for(let i = 0; i < teamCount; i++) {\n      const teamPlayers = [];\n      for(let j = 0; j < tournament.teamSize; j++) {\n        teamPlayers.push(playersShuffled[i*tournament.teamSize + j])\n      }\n      randomTeams.push({\n        id: uuidv4(),\n        tournamentId: tournament.id,\n        players: teamPlayers,\n        matches: []\n      })\n    }\n    saveTeams(randomTeams);\n  }\n\n  const onSaveTeam = (team) => {\n    loadTournament();\n  }\n\n  const onSaveMatchCallback = (match) => {\n    loadTournament();\n  }\n\n  const players = tournament.players.map((player, index) => {\n    return (\n      <span className='mr' key={index}>{player}</span>\n    )\n  })\n\n  return (\n    <div className='tournament v-layout'>\n      <h2>{tournament.name}</h2>\n      <div className='mb h-layout'>\n        <div className='mr-3'><span className='text-accent text-sm'>Date</span> {moment(tournament.created).format('MM/DD/YYYY')}</div>\n        <div><span className='text-accent text-sm'>Team size</span> {tournament.teamSize}</div>\n      </div>\n      <div className='h-layout'>{players}</div>\n      <Results tournament={tournament} />\n      <h3 className='mt-3'>Teams</h3>\n      <div className='h-layout'>\n        <button className='mr' onClick={() => generateRandomTeams()}>Generate Teams</button>\n        <button onClick={() => setIsOpen([true])}>Add Team</button>\n      </div>\n      <TeamList teams={tournament.teams} onSaveMatchCallback={() => onSaveMatchCallback()}/>\n      \n      <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          size='sm'\n        >\n        <TeamForm tournamentId={tournament.id} players={tournament.players} teamSize={tournament.teamSize} onSave={(team) => onSaveTeam(team)} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default Tournament;\n","import './App.css';\n\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  HashRouter\n} from \"react-router-dom\";\nimport Home from './components/views/Home/Home';\nimport Tournament from './components/views/Tournament/Tournament';\n\nfunction App() {\n  return (\n    <div className='app'>\n      <div className='app-bg'></div>\n      <div className='app-content'>\n        <HashRouter>\n          <Switch>\n            <Route path=\"/tournament/:id\" component={Tournament} />\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </HashRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}