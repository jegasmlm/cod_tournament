{"version":3,"sources":["utils/Utils.js","services/FirebaseService.js","services/TournamentService.js","services/NamesService.js","services/Services.js","components/elements/Modal.js","components/views/TournamentForm/TournamentForm.js","components/views/TournamentList/TournamentCard/TournamentCard.js","components/views/TournamentList/TournamentList.js","components/views/Home/Home.js","components/views/MatchForm/MatchForm.js","components/views/MatchList/MatchCard/MatchCard.js","components/views/MatchList/MatchList.js","components/views/TeamList/TeamCard/TeamCard.js","components/views/TeamList/TeamList.js","components/views/Results/AchievementCard/AchievementCard.js","components/views/Results/AchievementList/AchievementList.js","components/views/Results/Results.js","components/views/TeamForm/TeamForm.js","components/views/RandomTeams/RandomTeams.js","components/views/Tournament/Tournament.js","App.js","reportWebVitals.js","index.js"],"names":["toList","data","list","Object","keys","forEach","key","push","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","FirebaseService","ref","off","a","once","then","snapshot","JSON","parse","val","tournament","newTournamentRef","child","id","set","tournamentId","updates","update","remove","callback","on","team","newTeamtRef","teamId","match","newMatchtRef","matchId","tournaments","stringify","TournamentService","localStorage","getItem","setItem","mock","this","detach","save","delete","getTournaments2","getTournament","getTeams","getMatches","saveTeam","deleteTeam","teams","saveMatch","deleteMatch","close","index","item","i","getPositionPoint","position","getMatchKills","_","sum","teamScore","map","score","parseInt","kills","dmg","players","playersResultObject","player","damage","points","total","teamKey","matches","matchKey","indexOf","playersResult","orderBy","sumBy","NamesService","fetch","response","json","word","fetchNoun","fetchAdjective","Services","ReactModal","setAppElement","Modal","props","useState","modalIsOpen","setIsOpen","contentStyles","inset","minWith","maxHeight","overflow","width","size","padding","backgroundColor","border","borderRadius","boxShadow","useEffect","isOpen","onRequestClose","closeTimeoutMS","style","overlay","content","className","onClick","paddingTop","children","TournamentForm","onSave","validForm","setValidForm","name","setName","teamSize","setTeamSize","uuidv4","setPlayers","validate","validPlayers","validatedPlayers","playersInput","CSSTransition","timeout","classNames","type","value","placeholder","onChange","e","copy","setPlayerName","target","playersCopy","splice","deletePlayer","htmlFor","autoComplete","min","max","TransitionGroup","created","Date","open","disabled","TournamentCard","window","location","stopPropagation","deleteTournament","moment","format","TournamentList","tournamentCards","tIndex","Home","setTournaments","loadTournaments","MatchForm","setMatch","validTeamScore","matchCopy","setPlayerKills","setPlayerDamage","setMatchPosition","MatchCard","tournamentOpen","onDelete","tournamentService","setOpen","playerScore","getMatchPoint","document","querySelector","CSS","escape","scrollHeight","MatchList","setMatches","loadMatches","listMatches","matchCards","TeamCard","substring","onDeleteMatch","TeamList","setTeams","loadTeams","listTeams","teamCards","AchievementCard","achievement","icon","color","iconColor","attr","description","AchievementList","result","achievements","length","highKill","maxBy","shuffle","lowKill","minBy","highDamage","minDamage","highMatchPts","lowMatchPts","cards","Results","activePanel","setActivePanel","setResult","resultSlider","getElementById","scrollTo","top","left","scrollWidth","behavior","getResults","playerScoreTable","teamScoreTable","minHeight","TeamForm","setTeam","checked","playerCheckboxes","teamCopy","indexToRemove","teamCopySliced","slice","Math","select","names","getName","teamNames","RandomTeams","error","setError","randomTeams","setRandomTeams","setNewNames","generate","catch","message","teamCount","randomName","playersShuffled","teamPlayers","j","saveTeams","Tournament","randomTeamsIsOpen","setRandomTeamsIsOpen","setTournament","loadTournament","read","params","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5130b306.chunk.js","sourcesContent":["\r\nfunction toList(data) {\r\n  if(!data) return []\r\n  const list = [];\r\n  Object.keys(data).forEach((key) => {\r\n    list.push(data[key]);\r\n  })\r\n  return list;\r\n}\r\n\r\nexport { toList }\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport { toList } from \"../utils/Utils\";\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAQ2d6W3c1EpZ27yNxaBp8p0yIRWOIb1uE\",\r\n  authDomain: \"warzonetournament-247ef.firebaseapp.com\",\r\n  projectId: \"warzonetournament-247ef\",\r\n  storageBucket: \"warzonetournament-247ef.appspot.com\",\r\n  messagingSenderId: \"350451124321\",\r\n  appId: \"1:350451124321:web:2a40d2cb3c5245139cc220\",\r\n  measurementId: \"G-2GMB0XHEP4\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Get a reference to the database service\r\nvar database = firebase.database();\r\n\r\nexport default class FirebaseService {\r\n  \r\n  detach() {\r\n    database.ref('tournaments').off();\r\n  }\r\n\r\n  async getTournaments() {\r\n    return database.ref('tournaments').once('value').then((snapshot) => {\r\n      return JSON.parse(snapshot.val());\r\n    });\r\n  }\r\n\r\n  save(tournament) {\r\n    const newTournamentRef = database.ref().child('t').push();\r\n    tournament.id = newTournamentRef.key;\r\n    newTournamentRef.set(tournament);\r\n  }\r\n\r\n  update(id, tournament) {\r\n    database.ref(`t/${id}`).set(tournament);\r\n  }\r\n\r\n  close(tournamentId) {\r\n    var updates = {};\r\n    updates['/t/' + tournamentId + '/open/'] = false;\r\n    return database.ref().update(updates);\r\n  }\r\n\r\n  delete(id) {\r\n    database.ref(`t/${id}`).remove();\r\n  }\r\n\r\n  getTournaments2(callback) {\r\n    database.ref(`t`).on('value', (snapshot) => {\r\n      callback(toList(snapshot.val()));\r\n    });\r\n  }\r\n\r\n  getTournament(callback, id) {\r\n    database.ref(`t/${id}`).on('value', (snapshot) => {\r\n      callback(snapshot.val());\r\n    });\r\n  }\r\n\r\n  saveTeam(tournamentId, team) {\r\n    const newTeamtRef = database.ref().child(`t/${tournamentId}/teams/`).push();\r\n    team.id = newTeamtRef.key;\r\n    newTeamtRef.set(team);\r\n  }\r\n\r\n  deleteTeam(tournamentId, teamId) {\r\n    database.ref(`t/${tournamentId}/teams/${teamId}`).remove();\r\n  }\r\n\r\n  getTeams(callback, tournamentId) {\r\n    database.ref(`t/${tournamentId}/teams`).on('value', (snapshot) => {\r\n      callback(toList(snapshot.val()));\r\n    });\r\n  }\r\n\r\n  getTeam(callback, tournamentId, id) {\r\n    database.ref(`t/${tournamentId}/teams/${id}`).on('value', (snapshot) => {\r\n      callback(snapshot.val());\r\n    });\r\n  }\r\n\r\n  saveMatch(tournamentId, teamId, match) {\r\n    const newMatchtRef = database.ref().child(`t/${tournamentId}/teams/${teamId}/matches`).push();\r\n    match.id = newMatchtRef.key;\r\n    newMatchtRef.set(match);\r\n  }\r\n\r\n  deleteMatch(tournamentId, teamId, matchId) {\r\n    database.ref(`t/${tournamentId}/teams/${teamId}/matches/${matchId}`).remove();\r\n  }\r\n\r\n  getMatches(callback, tournamentId, teamId) {\r\n    database.ref(`t/${tournamentId}/teams/${teamId}/matches`).on('value', (snapshot) => {\r\n      callback(toList(snapshot.val()));\r\n    });\r\n  }\r\n\r\n  getMatch(callback, tournamentId, teamId, id) {\r\n    database.ref(`t/${tournamentId}/teams/${teamId}/matches/${id}`).on('value', (snapshot) => {\r\n      callback(snapshot.val());\r\n    });\r\n  }\r\n  \r\n  getLiveTournaments(callback) {\r\n    database.ref('tournaments').on('value', (snapshot) => {\r\n      callback(JSON.parse(snapshot.val()));\r\n    });\r\n  }\r\n  \r\n  async saveTournaments(tournaments) {\r\n    return database.ref('tournaments').set(JSON.stringify(tournaments));;\r\n  }\r\n\r\n}","import _ from \"lodash\";\r\nimport { toList } from \"../utils/Utils\";\r\nimport mock from './mock.json';\r\n\r\nexport default class TournamentService {\r\n\r\n  constructor(firebase) {\r\n    if(!localStorage.getItem('tournaments')){\r\n      localStorage.setItem('tournaments', JSON.stringify(mock));\r\n    }\r\n    this.firebase = firebase;\r\n  }\r\n\r\n  detach() {\r\n    this.firebase.detach();\r\n  }\r\n\r\n  save(tournament) {\r\n    this.firebase.save(tournament);\r\n  }\r\n\r\n  update(tournamentId, tournament) {\r\n    this.firebase.save(tournamentId, tournament);\r\n  }\r\n\r\n  delete(tournamentId) {\r\n    this.firebase.delete(tournamentId);\r\n  }\r\n\r\n  list(callback) {\r\n    this.firebase.getTournaments2(callback);\r\n  }\r\n\r\n  read(callback, id) {\r\n    this.firebase.getTournament(callback, id);\r\n  }\r\n\r\n  listTeams(callback, tournamentId) {\r\n    this.firebase.getTeams(callback, tournamentId);\r\n  }\r\n\r\n  listMatches(callback, tournamentId, teamId) {\r\n    this.firebase.getMatches(callback, tournamentId, teamId);\r\n  }\r\n\r\n  saveTeam(tournamentId, team) {\r\n    this.firebase.saveTeam(tournamentId, team);\r\n  }\r\n\r\n  deleteTeam(tournamentId, teamId) {\r\n    this.firebase.deleteTeam(tournamentId, teamId);\r\n  }\r\n\r\n  saveTeams(tournamentId, teams) {\r\n    teams.forEach((team) => {\r\n      this.saveTeam(tournamentId, team);\r\n    });\r\n  }\r\n\r\n  saveMatch(tournamentId, teamId, match) {\r\n    this.firebase.saveMatch(tournamentId, teamId, match);\r\n  }\r\n\r\n  deleteMatch(tournamentId, teamId, matchId) {\r\n    this.firebase.deleteMatch(tournamentId, teamId, matchId);\r\n  }\r\n\r\n  async close(tournamentId) {\r\n    this.firebase.close(tournamentId);\r\n  }\r\n\r\n  searchById(list, id) {\r\n    let index = -1;\r\n    list.forEach((item, i) => {\r\n      if(item.id === id){\r\n        index = i;\r\n      }\r\n    })\r\n    return index;\r\n  }\r\n\r\n  getMatchPoint(match) {\r\n    return this.getPositionPoint(match.position) + this.getMatchKills(match);\r\n  }\r\n\r\n  getMatchKills(match) {\r\n    return _.sum(match.teamScore.map((score) => parseInt(score.kills)));\r\n  }\r\n\r\n  getPositionPoint(position) {\r\n    switch(position) {\r\n      case '1': return 20;\r\n      case '2': return 15;\r\n      case '3': return 10;\r\n      case '4': return 5;\r\n      case '5': return 3;\r\n      case '6': return 2;\r\n      default: return 0;\r\n    }\r\n  }\r\n\r\n  getKillPoint(kills) {\r\n    return kills;\r\n  }\r\n\r\n  getDamagePoint(dmg) {\r\n    return 0;\r\n  }\r\n\r\n  getScorePoint(score) {\r\n    return 0;\r\n  }\r\n\r\n  getResults(tournament) {\r\n    const players = [...tournament.players];\r\n    const playersResultObject = {};\r\n    players.forEach((player) => {\r\n      if(!playersResultObject[player]){\r\n        playersResultObject[player] = {\r\n          player: player,\r\n          kills: 0,\r\n          damage: 0,\r\n          points: 0,\r\n          total: 0\r\n        }\r\n      }\r\n      Object.keys(tournament.teams).forEach((teamKey) => {\r\n        const team = tournament.teams[teamKey]; \r\n        if(team.matches){\r\n          Object.keys(team.matches).forEach((matchKey) => {\r\n            const match = team.matches[matchKey];\r\n            if(team.players.indexOf(player) > -1){\r\n              playersResultObject[player]['points'] += this.getPositionPoint(match.position);\r\n              playersResultObject[player]['total'] += this.getPositionPoint(match.position);\r\n            }\r\n            match.teamScore.forEach((score) => {\r\n              if(player === score.player) {\r\n                playersResultObject[player]['kills'] += parseInt(score.kills);\r\n                playersResultObject[player]['damage'] += parseInt(score.damage);\r\n                playersResultObject[player]['total'] += parseInt(score.kills);\r\n              }\r\n            })\r\n          })\r\n        }\r\n      })\r\n    })\r\n\r\n    const playersResult = [];\r\n    Object.keys(playersResultObject).forEach((key) => {\r\n      playersResult.push(playersResultObject[key]);\r\n    })\r\n\r\n    return {\r\n      players: _.orderBy(playersResult, ['total'], ['desc']),\r\n      teams: _.orderBy(toList(tournament.teams).map((team) => {\r\n        const kills = _.sumBy(team.matches, (match) => _.sumBy(match.teamScore, (score) => parseInt(score.kills)));\r\n        const points = _.sumBy(team.matches, (match) => this.getPositionPoint(match.position));\r\n        return {\r\n          teamId: team.id,\r\n          players: team.players,\r\n          kills: kills,\r\n          damage: _.sumBy(team.matches, (match) => _.sumBy(match.teamScore, (score) => parseInt(score.damage))),\r\n          points: points,\r\n          total: kills + points\r\n        }\r\n      }), ['total'], ['desc'])\r\n    };\r\n  }\r\n\r\n}","\r\n\r\nexport default class NamesService {\r\n\r\n  async fetchAdjective() {\r\n    return fetch(\"https://api.wordnik.com/v4/words.json/randomWord?hasDictionaryDef=true&includePartOfSpeech=adjective&excludePartOfSpeech=noun&minCorpusCount=4000&maxCorpusCount=-1&minDictionaryCount=1&maxDictionaryCount=-1&minLength=5&maxLength=-1&api_key=a2a73e7b926c924fad7001ca3111acd55af2ffabf50eb4ae5\").then((response) => {\r\n      return response.json();\r\n    }).then((data) => {\r\n      return data.word;\r\n    });\r\n  }\r\n  \r\n  // noun one kinda sucks because there are too many stupid nouns in the dictionary\r\n  async fetchNoun() {\r\n    return fetch(\"https://api.wordnik.com/v4/words.json/randomWord?hasDictionaryDef=false&includePartOfSpeech=noun&minCorpusCount=100000&maxCorpusCount=-1&minDictionaryCount=1&maxDictionaryCount=-1&minLength=5&maxLength=-1&api_key=a2a73e7b926c924fad7001ca3111acd55af2ffabf50eb4ae5\").then((response) => {\r\n      return response.json();\r\n    }).then((data) => {\r\n      return data.word;\r\n    });\r\n  }\r\n\r\n  async getName() {\r\n    return await this.fetchNoun() + ' ' +  await this.fetchAdjective() ;\r\n  }\r\n\r\n}","import FirebaseService from \"./FirebaseService\";\r\nimport TournamentService from \"./TournamentService\";\r\nimport NamesService from \"./NamesService\";\r\n\r\nclass Service {\r\n\r\n  tournaments() {\r\n    return new TournamentService(new FirebaseService());\r\n  }\r\n\r\n  names() {\r\n    return new NamesService();\r\n  }\r\n\r\n}\r\n\r\nconst Services = new Service();\r\n\r\nexport default Services;","import { useEffect, useState } from 'react';\r\nimport { default as ReactModal } from 'react-modal';\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nexport const Modal = (props) => {\r\n\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n  const overlayStyles = {\r\n    backgroundColor: '#000a'\r\n  };\r\n\r\n  const contentStyles = {\r\n    inset: 'auto',\r\n    minWith: '99vw',\r\n    maxHeight: '80vh',\r\n    overflow: 'auto',\r\n    width: (props.size === 'lg' ? '90%' : props.size === 'md' ? '60%' : 'auto'),\r\n    padding: '0',\r\n    backgroundColor: '#111e',\r\n    border: '1px solid #2f2c',\r\n    borderRadius: '0px',\r\n    boxShadow: '0px 0px 20px rgb(0, 0, 0, .4)',\r\n  };\r\n\r\n  useEffect(() => setIsOpen(props.isOpen[0]), [props]);\r\n\r\n  const closeModal = () => {\r\n    props.isOpen[0] = false;\r\n    setIsOpen(false)\r\n  }\r\n\r\n  return (\r\n    <ReactModal\r\n      isOpen={modalIsOpen}\r\n      onRequestClose={props.onRequestClose}\r\n      closeTimeoutMS={300}\r\n      style={{\r\n        overlay: overlayStyles,\r\n        content: contentStyles\r\n      }}\r\n    >\r\n      <div className='h-layout justify-right'>\r\n        <button className='btn--secondary' onClick={() => closeModal()}><i className='fa fa-times'></i></button>\r\n      </div>\r\n      <div className=\"container v-layout align-stretch\" style={{paddingTop: '0'}}>\r\n        {props.children}\r\n      </div>\r\n    </ReactModal>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\nimport Services from '../../../services/Services';\nimport { v4 as uuidv4 } from 'uuid';\nimport './TournamentForm.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nfunction TournamentForm({onSave}) {\n  const [validForm, setValidForm] = useState(false);\n  const [name, setName] = useState('');\n  const [teamSize, setTeamSize] = useState(4);\n  const [players, setPlayers] = useState([{id: uuidv4(), name:''}, {id: uuidv4(), name:''}, {id: uuidv4(), name:''}, {id: uuidv4(), name:''}]);\n\n  useEffect(() => {\n    validate();\n  }, [name, teamSize, players]);\n\n  const validate = () => {\n    let validPlayers = true;\n    const validatedPlayers = []\n    players.forEach((player) => {\n      if(player.name === '' || validatedPlayers.indexOf(player.name) > -1){\n        validPlayers = false;\n      } else {\n        validatedPlayers.push(player.name)\n      }\n    });\n    setValidForm(name !== '' && teamSize !== '' && validPlayers);\n  }\n \n  const addPlayer = () => {\n    setPlayers([...players, {id: uuidv4(), name:''}]);\n  };\n \n  const setPlayerName = (index, name) => {\n    const copy = [...players];\n    copy[index].name = name\n    setPlayers(copy);\n  };\n \n  const save = () => {\n    if(validForm) {\n      Services.tournaments().save({\n        created: new Date(),\n        open: true,\n        name: name,\n        teamSize: teamSize,\n        players: players.map((player) => player.name),\n        teams: []\n      });\n      onSave();\n    }\n  };\n\n  const deletePlayer = (index) => {\n    const playersCopy = [...players];\n    playersCopy.splice(index, 1);\n    setPlayers(playersCopy);\n  } \n\n  const playersInput = players.map((player, index) => {\n    return (\n      <CSSTransition key={player.id} timeout={400} classNames='input-list-item'>\n        <div className=\"mb h-layout justify-stretch\">\n          <input className='flex-grow' id={'playerNameInput'+index} type='text' value={player.name}  placeholder='Player Name' onChange={(e) => setPlayerName(index, e.target.value)}/>\n          <button className='btn--secondary text-accent' onClick={() => deletePlayer(index)}><i className='fa fa-minus'></i></button>\n        </div>\n      </CSSTransition>\n    )\n  });\n\n  return (\n    <div className='mt v-layout align-stretch'>\n      <div>\n        <div className=\"form-group h-layout\">\n          <input className='flex-grow' id='tournamentNameInput' type='text' value={name} onChange={(e) => setName(e.target.value)} placeholder='Tournament Name'/>\n        </div>\n        <div className=\"form-group h-layout\">\n          <label className='flex-grow' htmlFor='teamSizeInput'>Team size</label>\n          <input id='teamSizeInput' type='number' value={teamSize} onChange={(e) => setTeamSize(e.target.value)} autoComplete=\"off\"  min=\"1\" max=\"4\"/>\n        </div>\n      </div>\n      <div>\n        <div className='h-layout justify-left'>\n          <h3 className='flex-grow'>Players</h3>\n          <button className='btn--secondary' onClick={() => addPlayer()}><i className='fa fa-plus'></i></button>\n        </div>\n        <TransitionGroup >\n          {playersInput}\n        </TransitionGroup>\n      </div>\n      <button onClick={() => save()} disabled={!validForm}>save</button>\n    </div>\n  );\n}\n\nexport default TournamentForm;\n","import moment from 'moment';\nimport Services from '../../../../services/Services';\nimport './TournamentCard.css';\n\nfunction TournamentCard({ tournament }) {\n\n  const players = tournament.players.map((player, index) => <span className='mr-3 text-sm' key={player}>{player}</span>)\n\n  const deleteTournament = (e) => {\n    e.stopPropagation();\n    Services.tournaments().delete(tournament.id);\n  }\n\n  return (\n    <div className='card tournament-card' onClick={() => window.location = '#tournament/' + tournament.id}>\n      <div className='h-layout'>\n        <h3 className='flex-grow mr-3'>{tournament.name}</h3>\n        { tournament.open && <button className='btn--secondary' onClick={(e) => deleteTournament(e)}><i className='fas fa-trash'></i></button> }\n      </div>\n      <span className='text-sm text-hint'>{moment(tournament.created).format('MM/DD/YYYY')}</span>\n      <p>Team size: {tournament.teamSize}</p>\n      <h3>Players</h3>\n      <div className='h-layout justify-left'>{players}</div>\n    </div>\n  );\n}\n\nexport default TournamentCard;\n","import { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport TournamentCard from './TournamentCard/TournamentCard';\nimport './TournamentList.css';\n\nfunction TournamentList({tournaments}) {\n\n  const tournamentCards = tournaments.map((tournament, index) => {\n    return (\n      <CSSTransition key={tournament.id} timeout={400} classNames=\"card\">\n        <TournamentCard tournament={tournament} tIndex={index}/>\n      </CSSTransition>\n    )\n  });\n\n  return (\n    <TransitionGroup className='h-layout tournament-list align-left'>\n      {tournamentCards}\n    </TransitionGroup>\n  );\n}\n\nexport default TournamentList;\n","import { useEffect, useState } from 'react';\nimport Services from '../../../services/Services';\nimport { Modal } from '../../elements/Modal';\nimport TournamentForm from '../TournamentForm/TournamentForm';\nimport TournamentList from '../TournamentList/TournamentList';\nimport './Home.css';\n\nfunction Home() {\n  const [modalIsOpen, setIsOpen] = useState([false]);\n  const [tournaments, setTournaments] = useState([]);\n\n  useEffect(() => {\n    Services.tournaments().detach();\n    loadTournaments();\n  }, [])\n\n  const loadTournaments = () => {\n    Services.tournaments().list((tournaments) => {\n      setTournaments(tournaments);\n    })\n  }\n\n  return (\n    <div className='home v-layout'>\n      <div className='flex-grow v-layout start-tournament-btn'><button onClick={() => setIsOpen([true])}>Start Tournament</button></div>\n      <h3>Tournaments</h3>\n      <TournamentList tournaments={tournaments}/>\n      \n      <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={() => setIsOpen([false])}\n          size='sm'\n        >\n        <TournamentForm onSave={() => setIsOpen([false])} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default Home;\n","import { useState } from 'react';\nimport Services from '../../../services/Services';\nimport { v4 as uuidv4 } from 'uuid';\nimport './MatchForm.css';\nimport { useEffect } from 'react';\n\nfunction MatchForm({team, onSave}) {\n  const [validForm, setValidForm] = useState(false);\n  const [match, setMatch] = useState({\n    id: uuidv4(),\n    created: new Date(),\n    position: '',\n    teamScore: team.players.map((player) => {\n      return {\n        player: player,\n        kills: '',\n        damage: ''\n      }\n    })\n  })\n\n  useEffect(() => {\n    validate();\n  }, [match]);\n\n  const validate = () => {\n    let validTeamScore = true;\n    match.teamScore.forEach(score => {\n      if(score.kills === '' || score.damage === ''){\n        validTeamScore = false;\n      }\n    });\n    setValidForm(match.position !== '' && validTeamScore);\n  }\n\n  const setPlayerKills = (index, value) => {\n    const matchCopy = {...match};\n    matchCopy.teamScore[index].kills = value;\n    setMatch(matchCopy);\n  }\n\n  const setPlayerDamage = (index, value) => {\n    const matchCopy = {...match};\n    matchCopy.teamScore[index].damage = value;\n    setMatch(matchCopy);\n  }\n\n  const setMatchPosition = (value) => {\n    const matchCopy = {...match};\n    matchCopy.position = value;\n    setMatch(matchCopy);\n  }\n\n  const save = () => {\n    if(validForm){\n      Services.tournaments().saveMatch(team.tournamentId, team.id, match)\n      onSave();\n    }\n  }\n\n  const teamScore = match.teamScore.map((score, index) => {\n    return (\n      <div key={index} className=\"form-group match-player-form\">\n        <label className='flex-grow mr'>{score.player}</label>\n        <input id={'playerNameInput'+index} type='number' value={score.kills}  placeholder='Kills' onChange={(e) => setPlayerKills(index, e.target.value)} autoComplete=\"off\"  min=\"1\" max=\"100\"/>\n        <input id={'playerNameInput'+index} type='number' value={score.damage}  placeholder='Dmg' onChange={(e) => setPlayerDamage(index, e.target.value)} autoComplete=\"off\"  min=\"1\" max=\"100000\"/>\n      </div>\n    )\n  });\n\n  return (\n    <div className='v-layout align-stretch'>\n      <div>\n        <div className=\"form-group h-layout\">\n          <label className='flex-grow' htmlFor='matchPositionInput'>Match Position</label>\n          <input id='matchPositionInput' type='number' value={match.position} onChange={(e) => setMatchPosition(e.target.value)} autoComplete=\"off\" min=\"1\" max=\"99\"/>\n        </div>\n      </div>\n      <div>\n        <h3 className='flex-grow text-accent'>Players</h3>\n        {teamScore}\n      </div>\n      <button onClick={() => save()} disabled={!validForm}>save</button>\n    </div>\n  );\n}\n\nexport default MatchForm;\n","import moment from 'moment';\nimport { useState } from 'react';\nimport Services from '../../../../services/Services';\nimport './MatchCard.css';\n\nfunction MatchCard({tournamentOpen, match, onDelete}) {\n  const tournamentService = Services.tournaments();\n  const [open, setOpen] = useState(false);\n\n  const playerScore = match.teamScore.map((score, index) => {\n    return (\n      <tr key={index}>\n        <td>{score.player}</td>\n        <td>{score.kills}</td>\n        <td>{score.damage}</td>\n      </tr>\n    );\n  });\n\n  const getMatchDetailHeight = () => {\n    const matchDetail = document.querySelector(`#${CSS.escape(match.id)} .match-detail`);\n    return matchDetail.scrollHeight + 'px';\n  }\n\n  return (\n    <div id={match.id} className='match card' onClick={() => setOpen(!open)}>\n      <div className='h-layout text-sm'>\n        <div><span className='text-accent text-bold'>Kills: </span>{tournamentService.getMatchKills(match)}</div>\n        <div><span className='text-accent text-bold ml'>Pts: </span>{tournamentService.getPositionPoint(match.position)}</div>\n        <div><span className='text-accent text-bold ml'>Total: </span>{tournamentService.getMatchPoint(match)}</div>\n        { tournamentOpen && <div className='ml' onClick={(e) => onDelete(e, match)}><i className='fas fa-trash'></i></div> }\n      </div>\n      <div className={(open ? 'match--open' : '') + ' mt match-detail'} style={{maxHeight: open ? getMatchDetailHeight() : 0}}>\n        { match.created && <div className='text-sm'>Date: {moment(match.created).format('MM/DD/YYYY')}</div> }\n        <div className='text-sm'>Position: {match.position}</div>\n        <table className='mt'>\n          <thead>\n            <tr>\n              <th style={{width: '100%'}}>Player</th>\n              <th>Kills</th>\n              <th>Dmg</th>\n            </tr>\n          </thead>\n          <tbody>\n            {playerScore}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default MatchCard;\n","import { useEffect, useState } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Services from '../../../services/Services';\nimport MatchCard from './MatchCard/MatchCard';\nimport './MatchList.css';\n\nfunction MatchList({tournamentOpen, tournamentId, teamId, onDelete}) {\n  const [matches, setMatches] = useState([]);\n\n  useEffect(() => {\n    loadMatches();\n  }, [teamId])\n\n  const loadMatches = () => {\n    Services.tournaments().listMatches((matches) => {\n      setMatches(matches);\n    }, tournamentId, teamId)\n  }\n\n  const matchCards = matches.map((match, index) => {\n    return (\n      <CSSTransition key={match.id} timeout={400} classNames=\"card\">\n        <MatchCard tournamentOpen={tournamentOpen} match={match} onDelete={onDelete}/>\n      </CSSTransition>\n    )\n  });\n\n  return (\n    <TransitionGroup className='match-list'>\n      {matchCards}\n    </TransitionGroup>\n  );\n}\n\nexport default MatchList;\n","import { useState } from 'react';\nimport Services from '../../../../services/Services';\nimport { Modal } from '../../../elements/Modal';\nimport MatchForm from '../../MatchForm/MatchForm';\nimport MatchList from '../../MatchList/MatchList';\nimport './TeamCard.css';\n\nfunction TeamCard({ tournamentOpen, team}) {\n  const [modalIsOpen, setIsOpen] = useState([false]);\n \n  const onDeleteMatch = (e, match) => {\n    e.stopPropagation();\n    Services.tournaments().deleteMatch(team.tournamentId, team.id, match.id);\n  };\n\n  const deleteTeam = () => {\n    Services.tournaments().deleteTeam(team.tournamentId, team.id);\n  };\n\n  const onSaveMatch = () => {\n    setIsOpen([false]);\n  };\n\n  const players = team.players.map((player, index) => <span className='mr text-sm' key={index}>{player}</span>)\n\n  return (\n    <div className='card v-layout align-stretch'>\n      <div className='h-layout'>\n        <h3 className='text-sm flex-grow'>{team.name ? team.name : team.id.substring(0, 4)}</h3>\n        { tournamentOpen && <button className='btn--secondary' onClick={() => deleteTeam()}><i className='fas fa-trash'></i></button> }\n      </div>\n      { tournamentOpen && <button className='btn--tertiary flex-grow' onClick={() => setIsOpen([true])}>Add Match</button> }\n      <h4 className='text-sm text-bold text-accent'>Players</h4>\n      <div className='h-layout justify-stretch'>{players}</div>\n\n      <h4 className='text-sm text-bold text-accent'>Matches</h4>\n      <MatchList tournamentOpen={tournamentOpen} tournamentId={team.tournamentId} teamId={team.id} onDelete={(e, match) => onDeleteMatch(e, match)}/>\n      \n      <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={() => setIsOpen([false])}\n          size='sm'\n        >\n        <MatchForm team={team} onSave={() => onSaveMatch()} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default TeamCard;\n","import { useEffect, useState } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Services from '../../../services/Services';\nimport TeamCard from './TeamCard/TeamCard';\nimport './TeamList.css';\n\nfunction TeamList({tournamentOpen, tournamentId}) {\n  const [teams, setTeams] = useState([]);\n\n  useEffect(() => {\n    loadTeams();\n  }, [tournamentId])\n\n  const loadTeams = () => {\n    Services.tournaments().listTeams((teams) => {\n      setTeams(teams);\n    }, tournamentId)\n  }\n\n  const teamCards = teams.map((team, index) => {\n    return (\n      <CSSTransition key={team.id} timeout={400} classNames=\"card\">\n        <TeamCard tournamentOpen={tournamentOpen} team={team}/>\n      </CSSTransition>\n    )\n    });\n\n  return (\n    <TransitionGroup className='team-list h-layout align-left'>\n      {teamCards}\n    </TransitionGroup>\n  );\n}\n\nexport default TeamList;\n","import './AchievementCard.css';\n\nfunction AchievementCard({achievement}) {\n  \n  return (\n    <div className='card v-layout'>\n      <div><i className={'fa-2x fas fa-'+achievement.icon} style={{color: achievement.iconColor}}></i></div>\n      <h3 className='text-sm text-accent mt'>{achievement.name}</h3>\n      <div className='text-lg mb'>{achievement.player}</div>\n      <div><span className='text-sm text-accent'>{achievement.attr}: </span>{achievement.value}</div>\n      <div className='mt text-sm text-hint'>({achievement.description})</div>\n    </div>\n  );\n}\n\nexport default AchievementCard;\n","import _ from 'lodash';\nimport AchievementCard from '../AchievementCard/AchievementCard';\nimport './AchievementList.css';\n\nfunction AchievementList({result}) {\n  const achievements = [];\n  if(result.players.length > 0) {\n    const highKill = _.maxBy(_.shuffle(result.players), (player) => player.kills);\n    const lowKill = _.minBy(_.shuffle(result.players), (player) => player.kills);\n    const highDamage = _.maxBy(_.shuffle(result.players), (player) => player.damage);\n    const minDamage = _.minBy(_.shuffle(result.players), (player) => player.damage);\n    const highMatchPts = _.maxBy(_.shuffle(result.players), (player) => player.points);\n    const lowMatchPts = _.minBy(_.shuffle(result.players), (player) => player.points);\n  \n    achievements.push({\n      name: 'Assassin',\n      player: highKill.player,\n      attr: 'Kills',\n      value: highKill.kills,\n      description: 'Highest Kills',\n      icon: 'crosshairs',\n      iconColor: 'yellow'\n    });\n    achievements.push({\n      name: 'Butcher',\n      player: highDamage.player,\n      attr: 'Damage',\n      value: highDamage.damage,\n      description: 'Highest Damage',\n      icon: 'tint',\n      iconColor: 'red'\n    });\n    achievements.push({\n      name: 'Support',\n      player: highMatchPts.player,\n      attr: 'Match Pts',\n      value: highMatchPts.points,\n      description: 'Highest Points',\n      icon: 'toolbox',\n      iconColor: 'aqua'\n    });\n    achievements.push({\n      name: 'Bird Hunter',\n      player: lowKill.player,\n      attr: 'Kills',\n      value: lowKill.kills,\n      description: 'Lowest Kills',\n      icon: 'dove',\n      iconColor: 'aliceblue'\n    });\n    achievements.push({\n      name: 'Sleeping',\n      player: minDamage.player,\n      attr: 'Damage',\n      value: minDamage.damage,\n      description: 'Lowest Damage',\n      icon: 'bed',\n      iconColor: 'gray'\n    });\n    achievements.push({\n      name: 'Load',\n      player: lowMatchPts.player,\n      attr: 'Match Pts',\n      value: lowMatchPts.points,\n      description: 'Lowest Points',\n      icon: 'weight-hanging',\n      iconColor: 'purple'\n    });\n  }\n\n  const cards = achievements.map((achievement, index) => <AchievementCard key={index} achievement={achievement} />);\n\n  return (\n    <div className='achievement-list h-layout align-stretch'>\n      {cards}\n    </div>\n  );\n}\n\nexport default AchievementList;\n","import { useEffect, useState } from 'react';\nimport Services from '../../../services/Services';\nimport AchievementList from './AchievementList/AchievementList';\nimport './Results.css';\n\nfunction Results({tournament}) {\n  const [activePanel, setActivePanel] = useState(0);\n  const [result, setResult] = useState({\n    players: [],\n    teams: []\n  });\n\n  useEffect(() => {\n    const resultSlider = document.getElementById('result-slider');\n    resultSlider.scrollTo({\n      top: 0,\n      left: (resultSlider.scrollWidth/4) * activePanel, \n      behavior: 'smooth'\n    })\n  }, [activePanel]);\n\n  useEffect(() => {\n    setResult(Services.tournaments().getResults(tournament));\n  }, [tournament]);\n\n  const playerScoreTable = result.players.map((player, index) => {\n    return (\n      <tr key={'playerScore-'+index}>\n        <td>{index+1}</td>\n        <td>{player.player}</td>\n        <td>{player.kills}</td>\n        <td>{player.points}</td>\n        <td>{parseInt(player.kills) + parseInt(player.points)}</td>\n      </tr>\n    )\n  });\n\n  const teamScoreTable = result.teams.map((team, index) => {\n    return (\n      <tr key={'teamScore-'+index}>\n        <td>{index+1}</td>\n        <td>{team.name ? team.name : team.teamId.substring(0, 4)}</td>\n        <td>{team.kills}</td>\n        <td>{team.points}</td>\n        <td>{parseInt(team.kills) + parseInt(team.points)}</td>\n      </tr>\n    )\n  });\n\n  return (\n    <div className='v-layout result mt-3'>\n      <h3>Results</h3>\n      <div id='result-slider' className='result-slider'>\n        <div className='result-slide v-layout justify-right'>\n          {result.players.length > 0 && <div className='h-layout align-right' style={{minHeight: '400px'}}>\n            {result.players.length > 1 && <div className='place second-place'>\n              <div className='text-xl'>{result.players[1].player}</div>\n              <div className='box v-layout'>\n                <h1 className='text-white m0'>2<span className='text-sm'>nd</span></h1>\n                <span className='text-sm mt'>{parseInt(result.players[1].kills) + parseInt(result.players[1].points)} Pts</span>\n              </div>\n              <div className='v-layout text-sm mt'>\n                <span>Kills: {result.players[1].kills}</span>\n                <span>Match Pts: {result.players[1].points}</span>\n              </div>\n            </div> }\n            {result.players.length > 0 && <div className='place first-place ml mr'>\n              <div className='text-xl'>{result.players[0].player}</div>\n              <div className='box v-layout'>\n                <h1 className='text-white m0'>1<span className='text-sm'>st</span></h1>\n                <span className='text-sm mt'>{parseInt(result.players[0].kills) + parseInt(result.players[0].points)} Pts</span>\n              </div>\n              <div className='v-layout text-sm mt'>\n                <span>Kills: {result.players[0].kills}</span>\n                <span>Match Pts: {result.players[0].points}</span>\n              </div>\n            </div> }\n            {result.players.length > 2 && <div className='place third-place'>\n              <div className='text-xl'>{result.players[2].player}</div>\n              <div className='box v-layout'>\n                <h1 className='text-white m0'>3<span className='text-sm'>rd</span></h1>\n                <span className='text-sm mt'>{parseInt(result.players[2].kills) + parseInt(result.players[2].points)} Pts</span>\n              </div>\n              <div className='v-layout text-sm mt'>\n                <span>Kills: {result.players[2].kills}</span>\n                <span>Match Pts: {result.players[2].points}</span>\n              </div>\n            </div> }\n          </div> }\n        </div>\n        <div className='result-slide v-layout'>\n          <h3 className='mt-3'>Player Score Table</h3>\n          <div className='table-container'>\n            <table>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Player</th>\n                  <th>Kills</th>\n                  <th>Pts</th>\n                  <th>Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                {playerScoreTable}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className='result-slide v-layout'>\n          <h3 className='mt-3'>Team Score Table</h3>\n          <div className='table-container'>\n            <table>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th style={{width: '100%'}}>Team</th>\n                  <th>Kills</th>\n                  <th>Pts</th>\n                  <th>Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                {teamScoreTable}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className='result-slide v-layout'>\n          <h3 className='mt-3'>Achievements</h3>\n          <AchievementList result={result}/>\n        </div>\n      </div>\n      <div className='dots'>\n        <div className={activePanel === 0 ? 'active' : ''} onClick={() => setActivePanel(0)}></div>\n        <div className={activePanel === 1 ? 'active' : ''} onClick={() => setActivePanel(1)}></div>\n        <div className={activePanel === 2 ? 'active' : ''} onClick={() => setActivePanel(2)}></div>\n        <div className={activePanel === 3 ? 'active' : ''} onClick={() => setActivePanel(3)}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Results;\n","import { useEffect, useState } from 'react';\nimport Services from '../../../services/Services';\nimport './TeamForm.css';\n\nfunction TeamForm({tournamentId, players, teamSize, onSave}) {\n  const [validForm, setValidForm] = useState(false);\n  const [team, setTeam] = useState([])\n\n  const select = (index, value) => {\n    const teamCopy = [...team];\n    if(value){\n      teamCopy.push(index);\n    } else {\n      const indexToRemove = team.indexOf(index);\n      if (indexToRemove > -1) {\n        teamCopy.splice(indexToRemove, 1);\n      }\n    }\n    const teamCopySliced = teamCopy.slice(Math.max(0, teamCopy.length-teamSize), teamCopy.length);\n    setTeam(teamCopySliced);\n  }\n\n  useEffect(() => {\n    players.forEach((player, index) => {\n      if(team.indexOf(index) === -1){\n        document.getElementById(player+'_checkbox').checked = false\n      }\n    });\n    validate();\n  }, [team]);\n\n  const validate = () => {\n    setValidForm(team.length === parseInt(teamSize));\n  }\n\n  const save = () => {\n    if(validForm) {\n      Services.names().getName().then((name) => {\n        Services.tournaments().saveTeam(tournamentId, {\n          name: name,\n          tournamentId: tournamentId,\n          players: team.map((index) => players[index]),\n          matches: []\n        });\n        onSave(team);\n      })\n    }\n  }\n\n  const playerCheckboxes = players.map((player, index) => {\n    return (\n      <div key={index} className=\"h-layout mt\">\n        <label htmlFor={player+'_checkbox'} className='flex-grow'>{player}</label>\n        <input type='checkbox' id={player+'_checkbox'} checked={team.indexOf(index) > -1} onChange={(e) => select(index, e.target.checked)}/>\n      </div>\n    )\n  });\n\n  return (\n    <div className='v-layout align-stretch'>\n      <div>\n        <h3 className='text-accent'>Players</h3>\n        {playerCheckboxes}\n      </div>\n      <button className='mt' onClick={() => save()} disabled={!validForm}>save</button>\n    </div>\n  );\n}\n\nexport default TeamForm;\n","import _ from 'lodash';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useEffect, useState } from 'react';\nimport './RandomTeams.css';\nimport Services from '../../../services/Services';\n\nlet teamNames = [];\n\nfunction RandomTeams({tournamentId, teamSize, players, onSave}) {\n  const [error, setError] = useState(null);\n  const [randomTeams, setRandomTeams] = useState([{name: '', players: []}])\n\n  useEffect(() => {\n    setNewNames().then(() => {\n      generate();\n    }).catch((e) => {\n      setError(e.message);\n    });\n  }, [])\n\n  const setNewNames = async () => {\n    teamNames = [];\n    const teamCount = players.length / teamSize;\n    for(let i = 0; i < teamCount; i++){\n      const randomName = await Services.names().getName();\n      teamNames.push(randomName === 'undefined undefined' ? uuidv4().substring(0, 4) : randomName);\n    }\n    return teamNames;\n  }\n\n  const generate = () => {\n    const teamCount = players.length / teamSize;\n\n    const playersShuffled =  _.shuffle(players);\n    const randomTeams = []\n    for(let i = 0; i < teamCount; i++) {\n      const teamPlayers = [];\n      for(let j = 0; j < teamSize; j++) {\n        teamPlayers.push(playersShuffled[i*teamSize + j])\n      }\n      randomTeams.push({\n        id: uuidv4(),\n        name: teamNames[i],\n        tournamentId: tournamentId,\n        players: teamPlayers,\n        matches: []\n      })\n    }\n    \n    setRandomTeams(randomTeams);\n  }\n\n  const saveTeams = (teams) => {\n    Services.tournaments().saveTeams(tournamentId, teams);\n  }\n\n  const save = async () => {\n    saveTeams(randomTeams);\n    await setNewNames();\n    onSave();\n  }\n\n  const teams = randomTeams.map((team, index) => {\n    const players = team.players.map((player) => <span className='mr' key={player}>{player}</span>)\n    return (\n      <div className='mb-3' key={index}>\n        <h3>{team.name}</h3>\n        <div className='h-layout justify-left'>{players}</div>\n      </div>\n      \n    )\n  })\n\n  return (\n    <div>\n      {error && <span>{error}</span>}\n      {teams}\n      <div className='h-layout justify-stretch'>\n        <button className='flex-grow' onClick={() => generate()} >Generate</button>\n        <button className='ml' onClick={() => save()} >save</button>\n      </div>\n    </div>\n  );\n}\n\nexport default RandomTeams;\n","import { useEffect, useState } from 'react';\nimport Services from '../../../services/Services';\nimport './Tournament.css';\nimport TeamList from '../TeamList/TeamList';\nimport Results from '../Results/Results';\nimport { Modal } from '../../elements/Modal';\nimport TeamForm from '../TeamForm/TeamForm';\nimport moment from 'moment';\nimport RandomTeams from '../RandomTeams/RandomTeams';\n\nfunction Tournament(props) {\n  const [modalIsOpen, setIsOpen] = useState([false]);\n  const [randomTeamsIsOpen, setRandomTeamsIsOpen] = useState([false]);\n  const [tournament, setTournament] = useState({\n    name: '',\n    teamSize: 0,\n    players: [],\n    teams: []\n  });\n\n  useEffect(() => {\n    Services.tournaments().detach();\n    loadTournament();\n  }, []);\n\n  const loadTournament = () => {\n    Services.tournaments().read((tournament) => {\n      setTournament(tournament);\n    }, props.match.params.id)\n  }\n\n  const onSaveTeam = (team) => {\n    setIsOpen([false]);\n  }\n\n  const onSaveRandomTeams = (teams) => {\n    setRandomTeamsIsOpen([false]);\n  }\n\n  const closeTournament = () => {\n    Services.tournaments().close(tournament.id);\n  }\n\n  const players = tournament.players.map((player, index) => {\n    return (\n      <span className='mr' key={index}>{player}</span>\n    )\n  })\n\n  return (\n    <div className='tournament v-layout'>\n      <h2>{tournament.name}</h2>\n      <div className='mb h-layout'>\n        <div className='mr-3'><span className='text-accent text-sm'>Date</span> {moment(tournament.created).format('MM/DD/YYYY')}</div>\n        <div><span className='text-accent text-sm'>Team size</span> {tournament.teamSize}</div>\n      </div>\n      <div className='h-layout'>{players}</div>\n      { tournament.teams && <Results tournament={tournament} /> }\n      <h3 className='mt-3'>Teams</h3>\n      { tournament.open && <div className='h-layout'>\n        <button className='mr btn--danger' onClick={() => closeTournament()}>Close Tournament</button>\n        <button className='mr' onClick={() => setRandomTeamsIsOpen([true])}>Generate Teams</button>\n        <button onClick={() => setIsOpen([true])}>Add Team</button>\n      </div> }\n      { tournament.teams && <TeamList tournamentOpen={tournament.open} tournamentId={tournament.id}/> }\n      \n      <Modal\n          isOpen={(modalIsOpen)}\n          onRequestClose={() => setIsOpen([false])}\n          size='sm'\n        >\n        <TeamForm tournamentId={tournament.id} players={tournament.players} teamSize={tournament.teamSize} onSave={onSaveTeam} />\n      </Modal>\n      \n      <Modal\n          isOpen={randomTeamsIsOpen}\n          onRequestClose={() => setRandomTeamsIsOpen([false])}\n          size='sm'\n        >\n        <RandomTeams tournamentId={tournament.id} teamSize={tournament.teamSize} players={tournament.players} onSave={onSaveRandomTeams} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default Tournament;\n","import './App.css';\n\nimport React from \"react\";\nimport {\n  Switch,\n  Route,\n  HashRouter\n} from \"react-router-dom\";\nimport Home from './components/views/Home/Home';\nimport Tournament from './components/views/Tournament/Tournament';\n\nfunction App() {\n  return (\n    <div className='app'>\n      <div className='app-bg'></div>\n      <div className='app-content'>\n        <HashRouter>\n          <Switch>\n            <Route path=\"/tournament/:id\" component={Tournament} />\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </HashRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}